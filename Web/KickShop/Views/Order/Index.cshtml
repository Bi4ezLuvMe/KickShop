@model IPagedList<OrderViewModel>

@{
    ViewData["Title"] = "Orders";
}

<h2>Orders</h2>

<table class="table table-striped table-bordered">
    <thead class="thead-dark">
        <tr>
            <th>Order ID</th>
            <th>Order Date</th>
            <th>Total Amount</th>
            <th>Customer Name</th>
            <th>Customer Email</th>
            <th>Billing Name</th>
            <th>Billing Address</th>
            <th>City</th>
            <th>Postal Code</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            <tr>
                <td>@order.OrderId</td>
                <td>@order.OrderDate</td>
                <td>@order.TotalAmount.ToString("F2")</td>
                <td>@order.BillingName</td>
                <td>@order.CustomerEmail</td>
                <td>@order.BillingName</td>
                <td>@order.BillingAddress</td>
                <td>@order.BillingCity</td>
                <td>@order.BillingPostalCode</td>
                <td>
                    <form asp-action="Delete" asp-controller="Order" method="post" class="d-inline">
                        <input type="hidden" name="id" value="@order.OrderId" />
                        <button type="submit" class="btn btn-danger btn-sm">
                            <i class="fa fa-trash"></i> Delete
                        </button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>
    <div class="pagination-container">
        @if (Model.PageCount > 1)
        {
            <ul class="pagination">
                @if (Model.HasPreviousPage)
                {
                    <li><a href="@Url.Action("Index", new { page = 1 })" class="page-link">First</a></li>
                <li><a href="@Url.Action("Index", new { page = Model.PageNumber - 1 })" class="page-link">Previous</a></li>
                }
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="@(i == Model.PageNumber ? "active" : "")">
                    <a href="@Url.Action("Index", new { page = i })" class="page-link">@i</a>
                    </li>
                }
                @if (Model.HasNextPage)
                {
                <li><a href="@Url.Action("Index", new { page = Model.PageNumber + 1 })" class="page-link">Next</a></li>
                <li><a href="@Url.Action("Index", new { page = Model.PageCount })" class="page-link">Last</a></li>
                }
            </ul>
        }
    </div>

<style>
    .table {
        margin-top: 20px;
    }

    .btn-danger {
        background-color: #e3342f;
        border-color: #e3342f;
        color: #fff;
    }

        .btn-danger:hover {
            background-color: #cc1f1a;
            border-color: #cc1f1a;
        }

    .thead-dark {
        background-color: #343a40;
        color: #fff;
    }

    h2 {
        margin-bottom: 20px;
    }

    .pagination-container {
        margin-top: 30px;
        text-align: center;
    }

    .pagination {
        list-style-type: none;
        padding: 0;
        display: inline-flex;
        justify-content: center;
    }

        .pagination li {
            margin: 0 8px;
        }

    .page-link {
        text-decoration: none;
        padding: 10px 20px;
        background-color: #007bff;
        color: #fff;
        border-radius: 5px;
        border: 1px solid #007bff;
        font-weight: bold;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    .pagination li.active .page-link {
        background-color: #28a745;
        color: white;
        border-color: #28a745;
    }

    .page-link:hover {
        background-color: #0056b3;
        color: white;
    }

    .page-link:disabled {
        background-color: #e0e0e0;
        color: #a0a0a0;
        border-color: #e0e0e0;
        cursor: not-allowed;
    }
</style>
