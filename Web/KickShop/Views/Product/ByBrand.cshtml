@model IPagedList<Product>

@{
    ViewData["Title"] = "Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />
    string? currentSortOrder = ViewBag.SortOrder?.ToString();
    string? action = ViewBag.Action?.ToString();
    string? query = ViewBag.Query?.ToString();
}

<div class="container mt-5">
    <h2 class="text-center mb-4">@(action) Products</h2>

    <div class="d-flex justify-con mb-3">

        <form method="get" asp-controller="Product" asp-action="ByBrand" class="d-flex w-100">
            <div class="d-flex">
                <input type="text" name="query" class="form-control search-bar me-2" placeholder="Search for products..." value="@query" />
                <button type="submit" class="btn btn-primary search-button">
                    <i class="fas fa-search"></i>
                </button>
            </div>

            <div class="d-flex align-items-center ms-auto">
                <span class="me-2">Sort by Price:</span>
                <button type="submit" name="sortOrder" value="asc" class="btn btn-primary me-2 @(currentSortOrder == "asc" ? "active" : "")">Low to High</button>
                <button type="submit" name="sortOrder" value="desc" class="btn btn-primary @(currentSortOrder == "desc" ? "active" : "")">High to Low</button>
            </div>
            <input type="hidden" name="brand" value="@action" />
        </form>


    </div>

    <div class="row">
        @if (Model != null && Model.Any())
        {
            foreach (var product in Model)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <img src="@product.MainImageUrl" class="card-img-top" alt="@product.Name" style="height: 400px; object-fit: cover;" />
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">@product.Description</p>
                            <p class="card-text text-primary"><strong>@(product.Price) лв.</strong></p>
                            <a asp-controller="Product" asp-action="Details" asp-route-id="@product.ProductId" class="btn btn-primary">View Details</a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center">
                <p>No products found.</p>
            </div>
        }
    </div>
    <div class="pagination-container">
        @if (Model.PageCount > 1)
        {
            <ul class="pagination">
                @if (Model.HasPreviousPage)
                {
                    <li><a href="@Url.Action("ByBrand", new { brand = ViewBag.Action, sortOrder = ViewBag.CurrentSortOrder, query = ViewBag.Query, page = 1 })" class="page-link">First</a></li>
                    <li><a href="@Url.Action("ByBrand", new { brand = ViewBag.Action, sortOrder = ViewBag.CurrentSortOrder, query = ViewBag.Query, page = Model.PageNumber - 1 })" class="page-link">Previous</a></li>
                }

                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="@(i == Model.PageNumber ? "active" : "")">
                        <a href="@Url.Action("ByBrand", new { brand = ViewBag.Action, sortOrder = ViewBag.CurrentSortOrder, query = ViewBag.Query, page = i })" class="page-link">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li><a href="@Url.Action("ByBrand", new { brand = ViewBag.Action, sortOrder = ViewBag.CurrentSortOrder, query = ViewBag.Query, page = Model.PageNumber + 1 })" class="page-link">Next</a></li>
                    <li><a href="@Url.Action("ByBrand", new { brand = ViewBag.Action, sortOrder = ViewBag.CurrentSortOrder, query = ViewBag.Query, page = Model.PageCount })" class="page-link">Last</a></li>
                }
            </ul>
        }
    </div>
</div>
<style>
    .card:hover {
        transform: scale(1.02);
        transition: transform 0.3s ease;
    }

    .search-container {
        justify-content: flex-start;
        align-items: flex-start;
        margin: 20px 0;
    }

    .search-bar {
        width: 300px;
        height: 50px;
        padding: 10px 15px;
        border: 1px solid #ccc;
        border-radius: 4px 0 0 4px;
        font-size: 16px;
        outline: none;
    }

        .search-bar:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

    .search-button {
        background-color: #007bff;
        border: none;
        color: white;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 0 4px 4px 0;
    }

        .search-button:hover {
            background-color: #0056b3;
        }
            .pagination-container

    {
        margin-top: 30px;
        text-align: center;
    }

    .pagination {
        list-style-type: none;
        padding: 0;
        display: inline-flex;
        justify-content: center;
    }

        .pagination li {
            margin: 0 8px;
        }

    .page-link {
        text-decoration: none;
        padding: 10px 20px;
        background-color: #007bff;
        color: #fff;
        border-radius: 5px;
        border: 1px solid #007bff;
        font-weight: bold;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    .pagination li.active .page-link {
        background-color: #28a745;
        color: white;
        border-color: #28a745;
    }

    .page-link:hover {
        background-color: #0056b3;
        color: white;
    }

    .page-link:disabled {
        background-color: #e0e0e0;
        color: #a0a0a0;
        border-color: #e0e0e0;
        cursor: not-allowed;
    }
</style>