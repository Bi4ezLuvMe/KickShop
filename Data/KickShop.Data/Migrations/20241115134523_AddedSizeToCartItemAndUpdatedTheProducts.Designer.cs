// <auto-generated />
using System;
using KickShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KickShop.Migrations
{
    [DbContext(typeof(KickShopDbContext))]
    [Migration("20241115134523_AddedSizeToCartItemAndUpdatedTheProducts")]
    partial class AddedSizeToCartItemAndUpdatedTheProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("KickShop.Models.Brand", b =>
                {
                    b.Property<Guid>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The Address Of The Brand");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The Country Of Origin Of The The Brand");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("The Image Of The Brand");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Soft Delete Property");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The Name Of The Brand");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("The Phone Number Of The Brand");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = new Guid("a7ec4ec3-4cfb-4d87-b84d-19447a6135b1"),
                            Address = "123 Boxing Blvd, New York, NY",
                            Country = "USA",
                            ImageUrl = "/images/Brands/everlast-logo.png",
                            IsDeleted = false,
                            Name = "Everlast",
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            BrandId = new Guid("d2da5cd7-466a-4b99-903d-e72e54c3de3d"),
                            Address = "456 Sports Ave, London, UK",
                            Country = "UK",
                            ImageUrl = "/images/Brands/rdx-logo.png",
                            IsDeleted = false,
                            Name = "RDX",
                            PhoneNumber = "456-789-0123"
                        },
                        new
                        {
                            BrandId = new Guid("35bafac4-404d-46e4-9af7-d8fd7f39fc5d"),
                            Address = "789 Fight St, Toronto, ON",
                            Country = "Canada",
                            ImageUrl = "/images/Brands/hayabusa-logo.png",
                            IsDeleted = false,
                            Name = "Hayabusa",
                            PhoneNumber = "789-012-3456"
                        },
                        new
                        {
                            BrandId = new Guid("9d4c3abd-182c-4f87-8002-ca33e0db970c"),
                            Address = "101 Martial Arts Way, Paris, FR",
                            Country = "France",
                            ImageUrl = "/images/Brands/venum-logo.png",
                            IsDeleted = false,
                            Name = "Venum",
                            PhoneNumber = "321-654-0987"
                        },
                        new
                        {
                            BrandId = new Guid("8cbc1919-4c2c-4e9a-81a4-56709c6a9d3a"),
                            Address = "234 Fighter Rd, Bangkok, TH",
                            Country = "Thailand",
                            ImageUrl = "/images/Brands/fairtex-logo.png",
                            IsDeleted = false,
                            Name = "Fairtex",
                            PhoneNumber = "876-543-2109"
                        },
                        new
                        {
                            BrandId = new Guid("b35fa41d-c4b2-4155-9902-7eb37748586f"),
                            Address = "345 Punch Ln, Los Angeles, CA",
                            Country = "USA",
                            ImageUrl = "/images/Brands/title-boxing-logo.png",
                            IsDeleted = false,
                            Name = "Title Boxing",
                            PhoneNumber = "987-654-3210"
                        },
                        new
                        {
                            BrandId = new Guid("1a12e445-1bf3-4fca-9791-944f50123442"),
                            Address = "456 Ring Rd, Chicago, IL",
                            Country = "USA",
                            ImageUrl = "/images/Brands/ringside-logo.png",
                            IsDeleted = false,
                            Name = "Ringside",
                            PhoneNumber = "234-567-8901"
                        },
                        new
                        {
                            BrandId = new Guid("fb7c51b9-171e-4d15-9acd-7b38b5b738e6"),
                            Address = "567 Martial Arts Blvd, Oklahoma City, OK",
                            Country = "USA",
                            ImageUrl = "/images/Brands/century-logo.png",
                            IsDeleted = false,
                            Name = "Century",
                            PhoneNumber = "345-678-9012"
                        },
                        new
                        {
                            BrandId = new Guid("e2c91574-fcab-455c-b49b-631a568140d4"),
                            Address = "678 Fighter Ave, Miami, FL",
                            Country = "USA",
                            ImageUrl = "/images/Brands/sanabul-logo.png",
                            IsDeleted = false,
                            Name = "Sanabul",
                            PhoneNumber = "456-789-0123"
                        },
                        new
                        {
                            BrandId = new Guid("2e6a6e60-1e01-414c-8269-2ea87f3080de"),
                            Address = "789 Kick Rd, Phuket, TH",
                            Country = "Thailand",
                            ImageUrl = "/images/Brands/twins-special-logo.png",
                            IsDeleted = false,
                            Name = "Twins Special",
                            PhoneNumber = "567-890-1234"
                        });
                });

            modelBuilder.Entity("KickShop.Models.CartItem", b =>
                {
                    b.Property<Guid>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Indentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Product Entity");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasComment("The Quantity Of The Product");

                    b.Property<Guid>("ShoppingCartId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The ShoppingCart Entity");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Selected Size Of The Product");

                    b.HasKey("CartItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CartsItems");
                });

            modelBuilder.Entity("KickShop.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Image For The Category");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Soft Delete Property");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("The Name Of The Category");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("37217175-8641-4195-bf21-e6be1da10904"),
                            ImageUrl = "/images/Categegories/boxing-gloves.jfif",
                            IsDeleted = false,
                            Name = "Gloves"
                        },
                        new
                        {
                            CategoryId = new Guid("8cfb3c2e-d9b5-4cee-9b97-90a4d8040f13"),
                            ImageUrl = "/images/Categories/clothing.png",
                            IsDeleted = false,
                            Name = "Clothing"
                        },
                        new
                        {
                            CategoryId = new Guid("a7feb726-fa14-4cf2-90f3-16ae52d2311e"),
                            ImageUrl = "/images/Categories/shin-guards.png",
                            IsDeleted = false,
                            Name = "Shinguards"
                        },
                        new
                        {
                            CategoryId = new Guid("75ad6db9-0dcc-4d72-b42c-998fccb558f0"),
                            ImageUrl = "/images/Categories/hand-wraps.png",
                            IsDeleted = false,
                            Name = "Hand Wraps"
                        },
                        new
                        {
                            CategoryId = new Guid("b9a25e9d-6252-4865-bf62-080a4b4c8d93"),
                            ImageUrl = "/images/Categories/head-gear.png",
                            IsDeleted = false,
                            Name = "Headgear"
                        },
                        new
                        {
                            CategoryId = new Guid("01117694-2336-4f1b-9ce8-de33d302db47"),
                            ImageUrl = "/images/Categories/mouth-guard.png",
                            IsDeleted = false,
                            Name = "Mouthguards"
                        },
                        new
                        {
                            CategoryId = new Guid("7910c192-08b7-40e1-bb3b-42e78f5a00b2"),
                            ImageUrl = "/images/Categories/punching-bag.png",
                            IsDeleted = false,
                            Name = "Punching Bags"
                        },
                        new
                        {
                            CategoryId = new Guid("da69fa40-d344-4c02-ae80-5bad0a60569b"),
                            ImageUrl = "/images/Categories/training-equipment.png",
                            IsDeleted = false,
                            Name = "Training Equipment"
                        },
                        new
                        {
                            CategoryId = new Guid("8d161e3d-49a8-40d6-a534-ee01c4f2acbc"),
                            ImageUrl = "/images/Categories/boxing-shoes.png",
                            IsDeleted = false,
                            Name = "Shoes"
                        },
                        new
                        {
                            CategoryId = new Guid("33f3e250-d7f7-4084-9417-5f41f12f0c6d"),
                            ImageUrl = "/images/Categories/protective-equipment.jfif",
                            IsDeleted = false,
                            Name = "Protective Gear"
                        });
                });

            modelBuilder.Entity("KickShop.Models.CustomerOrder", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Order Entity. Also Primary Key");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("Foreign Key To The ASP.NET User Entity. Also Primary Key");

                    b.HasKey("OrderId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomersOrders");
                });

            modelBuilder.Entity("KickShop.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("OrderDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Date When The Order Was Placed");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("The Total Amount Of The Order");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("KickShop.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Brand Entity");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Category Entity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("The Description For The Product");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Soft Delete Property");

                    b.Property<string>("MainImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The Product Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasComment("The Price Of The Product");

                    b.Property<string>("Sizes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Size Of The Product");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int")
                        .HasComment("Current Stock Quantity");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("e4976020-b55f-4b56-ac8d-e364c04853e0"),
                            BrandId = new Guid("d2da5cd7-466a-4b99-903d-e72e54c3de3d"),
                            CategoryId = new Guid("37217175-8641-4195-bf21-e6be1da10904"),
                            Description = "High-quality leather gloves for all training levels.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/rdx-boxing-gloves/rdx-boxing-glove-3.png",
                            Name = "RDX Boxing Gloves",
                            Price = 109.99m,
                            Sizes = "[1,2,3]",
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = new Guid("c6f2436e-e7ba-41a7-8572-18475cf77f35"),
                            BrandId = new Guid("35bafac4-404d-46e4-9af7-d8fd7f39fc5d"),
                            CategoryId = new Guid("37217175-8641-4195-bf21-e6be1da10904"),
                            Description = "Top-notch gloves with exceptional durability.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/hayabusa-boxing-gloves/hayabusa-boxing-gloves-1.png",
                            Name = "Hayabusa T3 Boxing Gloves",
                            Price = 189.99m,
                            Sizes = "[2,3,4]",
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = new Guid("cb912c0e-927b-44af-a7be-1196edd82aed"),
                            BrandId = new Guid("9d4c3abd-182c-4f87-8002-ca33e0db970c"),
                            CategoryId = new Guid("37217175-8641-4195-bf21-e6be1da10904"),
                            Description = "Lightweight and designed for all skill levels.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/venum-challenger-gloves/venum-challenger-gloves-2.png",
                            Name = "Venum Challenger Gloves",
                            Price = 89.99m,
                            Sizes = "[1,2,3]",
                            StockQuantity = 120
                        },
                        new
                        {
                            ProductId = new Guid("dbc7ee19-78f0-425e-b656-96c6dd4a43f6"),
                            BrandId = new Guid("b35fa41d-c4b2-4155-9902-7eb37748586f"),
                            CategoryId = new Guid("37217175-8641-4195-bf21-e6be1da10904"),
                            Description = "Durable leather gloves for heavy bag workouts.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/title-boxing-bag/title-boxing-bag-1.png",
                            Name = "Title Boxing Leather Bag Gloves",
                            Price = 79.99m,
                            Sizes = "[2,3]",
                            StockQuantity = 80
                        },
                        new
                        {
                            ProductId = new Guid("5c8517c9-e056-48d4-a6c1-26b8d38248c9"),
                            BrandId = new Guid("fb7c51b9-171e-4d15-9acd-7b38b5b738e6"),
                            CategoryId = new Guid("8cfb3c2e-d9b5-4cee-9b97-90a4d8040f13"),
                            Description = "Comfortable shorts designed for kickboxing.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/century-kickboxing-shorts/century-kickboxing-shorts-1.png",
                            Name = "Century Martial Arts Kickboxing Shorts",
                            Price = 79.99m,
                            Sizes = "[2,3,4]",
                            StockQuantity = 75
                        },
                        new
                        {
                            ProductId = new Guid("3d304dc7-02bc-471f-aca0-327562dbebc7"),
                            BrandId = new Guid("e2c91574-fcab-455c-b49b-631a568140d4"),
                            CategoryId = new Guid("a7feb726-fa14-4cf2-90f3-16ae52d2311e"),
                            Description = "High-quality shin guards for protection and mobility.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/sanabul-shin-guards/sanabul-shin-guards-1.png",
                            Name = "Sanabul Essential Shin Guards",
                            Price = 105.99m,
                            Sizes = "[2,3,4]",
                            StockQuantity = 90
                        },
                        new
                        {
                            ProductId = new Guid("2e68149e-5e3f-438c-8123-9a0d1e788660"),
                            BrandId = new Guid("2e6a6e60-1e01-414c-8269-2ea87f3080de"),
                            CategoryId = new Guid("b9a25e9d-6252-4865-bf62-080a4b4c8d93"),
                            Description = "Full-face protection with Twins quality.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/twins-special-headgear/twins-special-headgear-1.png",
                            Name = "Twins Special Headgear",
                            Price = 89.99m,
                            Sizes = "[1,2,3]",
                            StockQuantity = 60
                        },
                        new
                        {
                            ProductId = new Guid("fb64da22-9f41-4f37-adb8-f487ed95db0b"),
                            BrandId = new Guid("a7ec4ec3-4cfb-4d87-b84d-19447a6135b1"),
                            CategoryId = new Guid("75ad6db9-0dcc-4d72-b42c-998fccb558f0"),
                            Description = "Classic wraps for wrist and knuckle protection.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/everlast-hand-wraps/everlast-hand-wraps-3.png",
                            Name = "Everlast Hand Wraps",
                            Price = 9.99m,
                            Sizes = "[2,3]",
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = new Guid("9a8f5bd7-69cc-4e65-bc89-f47f35f0ccde"),
                            BrandId = new Guid("1a12e445-1bf3-4fca-9791-944f50123442"),
                            CategoryId = new Guid("7910c192-08b7-40e1-bb3b-42e78f5a00b2"),
                            Description = "Heavy-duty bag for all levels of training.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/ringside-punching-bag/ringside-punching-bag-1.png",
                            Name = "Ringside Punching Bag",
                            Price = 219.99m,
                            Sizes = "[3]",
                            StockQuantity = 40
                        },
                        new
                        {
                            ProductId = new Guid("c3cb695f-8672-426d-a839-fddf8eafa32f"),
                            BrandId = new Guid("d2da5cd7-466a-4b99-903d-e72e54c3de3d"),
                            CategoryId = new Guid("8d161e3d-49a8-40d6-a534-ee01c4f2acbc"),
                            Description = "Lightweight and supportive for agility in the ring.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/rdx-boxing-shoes/rdx-boxing-shoes-1.png",
                            Name = "RDX Pro Boxing Shoes",
                            Price = 109.99m,
                            Sizes = "[2,3,4]",
                            StockQuantity = 65
                        },
                        new
                        {
                            ProductId = new Guid("7068aca7-4008-4c28-9495-479ce2114b3b"),
                            BrandId = new Guid("9d4c3abd-182c-4f87-8002-ca33e0db970c"),
                            CategoryId = new Guid("a7feb726-fa14-4cf2-90f3-16ae52d2311e"),
                            Description = "High-durability shin guards ideal for intense training.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/venum-challenger-shin-guards/venum-challenger-shin-guards-1.png",
                            Name = "Venum Challenger Shin Guards",
                            Price = 105.99m,
                            Sizes = "[1,2,3]",
                            StockQuantity = 95
                        },
                        new
                        {
                            ProductId = new Guid("9aae063f-38f3-452e-9d04-183adef544a2"),
                            BrandId = new Guid("8cbc1919-4c2c-4e9a-81a4-56709c6a9d3a"),
                            CategoryId = new Guid("8cfb3c2e-d9b5-4cee-9b97-90a4d8040f13"),
                            Description = "Premium Muay Thai shorts with authentic design.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/fairtex-muay-thai-shorts/fairtex-muay-thai-shorts-1.png",
                            Name = "Fairtex Muay Thai Shorts",
                            Price = 84.99m,
                            Sizes = "[2,3,4]",
                            StockQuantity = 90
                        },
                        new
                        {
                            ProductId = new Guid("dd11e94a-5a3c-4a37-9717-94270c18540d"),
                            BrandId = new Guid("b35fa41d-c4b2-4155-9902-7eb37748586f"),
                            CategoryId = new Guid("7910c192-08b7-40e1-bb3b-42e78f5a00b2"),
                            Description = "Perfect for accuracy and reflex training.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/title-boxing-gloves/title-boxing-gloves-1.png",
                            Name = "Title Boxing Double End Bag",
                            Price = 99.99m,
                            Sizes = "[3]",
                            StockQuantity = 70
                        },
                        new
                        {
                            ProductId = new Guid("f020749e-aa83-46b8-8dcd-d69147d60b60"),
                            BrandId = new Guid("a7ec4ec3-4cfb-4d87-b84d-19447a6135b1"),
                            CategoryId = new Guid("b9a25e9d-6252-4865-bf62-080a4b4c8d93"),
                            Description = "Full-protection headgear with durable padding.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/everlast-pro-headgear/everlast-headgear-1.png",
                            Name = "Everlast Pro Headgear",
                            Price = 89.99m,
                            Sizes = "[2,3]",
                            StockQuantity = 50
                        });
                });

            modelBuilder.Entity("KickShop.Models.ShoppingCart", b =>
                {
                    b.Property<Guid>("ShoppingCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("Foreign Key To The Customer Entity");

                    b.Property<string>("DateCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Date When The Shopping Cart Was Created");

                    b.HasKey("ShoppingCartId");

                    b.HasIndex("CustomerId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProductImage", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("The Url To The Image");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Product Entity To Which The Picture Belongs");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsImages");

                    b.HasData(
                        new
                        {
                            ImageId = new Guid("b2ad7434-7f0c-4641-8032-af15a62669be"),
                            ImageUrl = "/images/Products/rdx-boxing-gloves/rdx-boxing-glove-1.png",
                            ProductId = new Guid("e4976020-b55f-4b56-ac8d-e364c04853e0")
                        },
                        new
                        {
                            ImageId = new Guid("29a03e15-33cd-4987-a0e4-4c8d976b314b"),
                            ImageUrl = "/images/Products/rdx-boxing-gloves/rdx-boxing-glove-2.png",
                            ProductId = new Guid("e4976020-b55f-4b56-ac8d-e364c04853e0")
                        },
                        new
                        {
                            ImageId = new Guid("afd2b2a5-50c0-477d-91ec-cd1fc7aed008"),
                            ImageUrl = "/images/Products/rdx-boxing-gloves/rdx-boxing-glove-3.png",
                            ProductId = new Guid("e4976020-b55f-4b56-ac8d-e364c04853e0")
                        },
                        new
                        {
                            ImageId = new Guid("44aa363a-ab5d-4771-ad97-0dae30ac39c0"),
                            ImageUrl = "/images/Products/hayabusa-boxing-gloves/hayabusa-boxing-gloves-1.png",
                            ProductId = new Guid("c6f2436e-e7ba-41a7-8572-18475cf77f35")
                        },
                        new
                        {
                            ImageId = new Guid("ff6a5279-3cd0-4d45-b2dc-c6d6b534515e"),
                            ImageUrl = "/images/Products/hayabusa-boxing-gloves/hayabusa-boxing-gloves-2.png",
                            ProductId = new Guid("c6f2436e-e7ba-41a7-8572-18475cf77f35")
                        },
                        new
                        {
                            ImageId = new Guid("51fb7c50-8e85-4c8e-ad66-61cdcead95b2"),
                            ImageUrl = "/images/Products/hayabusa-boxing-gloves/hayabusa-boxing-gloves-3.png",
                            ProductId = new Guid("c6f2436e-e7ba-41a7-8572-18475cf77f35")
                        },
                        new
                        {
                            ImageId = new Guid("bc73b90d-e31f-48b7-81a8-ffc66d8dcad3"),
                            ImageUrl = "/images/Products/venum-challenger-gloves/venum-challenger-gloves-1.png",
                            ProductId = new Guid("cb912c0e-927b-44af-a7be-1196edd82aed")
                        },
                        new
                        {
                            ImageId = new Guid("08ccd12e-d4ec-4717-aa6e-f91e84cbf18d"),
                            ImageUrl = "/images/Products/venum-challenger-gloves/venum-challenger-gloves-2.png",
                            ProductId = new Guid("cb912c0e-927b-44af-a7be-1196edd82aed")
                        },
                        new
                        {
                            ImageId = new Guid("7f8db1f4-29a1-42df-8722-84cd8047769e"),
                            ImageUrl = "/images/Products/venum-challenger-gloves/venum-challenger-gloves-3.png",
                            ProductId = new Guid("cb912c0e-927b-44af-a7be-1196edd82aed")
                        },
                        new
                        {
                            ImageId = new Guid("7852b782-f5fa-447d-a63e-7cfc9cc73ed9"),
                            ImageUrl = "/images/Products/title-boxing-bag/title-boxing-bag-1.png",
                            ProductId = new Guid("dbc7ee19-78f0-425e-b656-96c6dd4a43f6")
                        },
                        new
                        {
                            ImageId = new Guid("c82e77a8-53ab-48c8-84a7-d9ad3cd78712"),
                            ImageUrl = "/images/Products/title-boxing-bag/title-boxing-bag-2.png",
                            ProductId = new Guid("dbc7ee19-78f0-425e-b656-96c6dd4a43f6")
                        },
                        new
                        {
                            ImageId = new Guid("2faf1ddc-0018-46f1-9e8e-05eb974023ef"),
                            ImageUrl = "/images/Products/title-boxing-bag/title-boxing-bag-3.png",
                            ProductId = new Guid("dbc7ee19-78f0-425e-b656-96c6dd4a43f6")
                        },
                        new
                        {
                            ImageId = new Guid("17fc2d4b-ab63-4d0e-be8f-c582acca43cc"),
                            ImageUrl = "/images/Products/century-kickboxing-shorts/century-kickboxing-shorts-1.png",
                            ProductId = new Guid("5c8517c9-e056-48d4-a6c1-26b8d38248c9")
                        },
                        new
                        {
                            ImageId = new Guid("6b10028c-4ec2-4894-b678-6dabcaf02fca"),
                            ImageUrl = "/images/Products/century-kickboxing-shorts/century-kickboxing-shorts-2.png",
                            ProductId = new Guid("5c8517c9-e056-48d4-a6c1-26b8d38248c9")
                        },
                        new
                        {
                            ImageId = new Guid("d4e4df75-b730-4a6d-98d9-283bdbf2a26d"),
                            ImageUrl = "/images/Products/century-kickboxing-shorts/century-kickboxing-shorts-3.png",
                            ProductId = new Guid("5c8517c9-e056-48d4-a6c1-26b8d38248c9")
                        },
                        new
                        {
                            ImageId = new Guid("8ae1b473-56ab-4281-81c9-6c606a891bb6"),
                            ImageUrl = "/images/Products/sanabul-shin-guards/sanabul-shin-guards-1.png",
                            ProductId = new Guid("3d304dc7-02bc-471f-aca0-327562dbebc7")
                        },
                        new
                        {
                            ImageId = new Guid("8d50857e-0cde-4542-8e03-46410d6b8d6d"),
                            ImageUrl = "/images/Products/sanabul-shin-guards/sanabul-shin-guards-2.png",
                            ProductId = new Guid("3d304dc7-02bc-471f-aca0-327562dbebc7")
                        },
                        new
                        {
                            ImageId = new Guid("7760bc40-29b7-4d11-b4b5-c12cd13ad429"),
                            ImageUrl = "/images/Products/sanabul-shin-guards/sanabul-shin-guards-3.png",
                            ProductId = new Guid("3d304dc7-02bc-471f-aca0-327562dbebc7")
                        },
                        new
                        {
                            ImageId = new Guid("62dde1f4-e8fe-452e-9d8d-2944c1d51718"),
                            ImageUrl = "/images/Products/twins-special-headgear/twins-special-headgear-1.png",
                            ProductId = new Guid("2e68149e-5e3f-438c-8123-9a0d1e788660")
                        },
                        new
                        {
                            ImageId = new Guid("abacd0d4-0038-441d-bc15-7bd68ce6f072"),
                            ImageUrl = "/images/Products/twins-special-headgear/twins-special-headgear-2.png",
                            ProductId = new Guid("2e68149e-5e3f-438c-8123-9a0d1e788660")
                        },
                        new
                        {
                            ImageId = new Guid("5a858856-66a3-45f4-bcc0-dc26dfe6a98a"),
                            ImageUrl = "/images/Products/twins-special-headgear/twins-shin-headgear-3.png",
                            ProductId = new Guid("2e68149e-5e3f-438c-8123-9a0d1e788660")
                        },
                        new
                        {
                            ImageId = new Guid("9d4093ce-eb47-475b-bbc0-d98d96df5531"),
                            ImageUrl = "/images/Products/everlast-hand-wraps/everlast-hand-wraps-1.png",
                            ProductId = new Guid("fb64da22-9f41-4f37-adb8-f487ed95db0b")
                        },
                        new
                        {
                            ImageId = new Guid("33afcd26-6f37-456e-9bca-3c90acbb899e"),
                            ImageUrl = "/images/Products/everlast-hand-wraps/everlast-hand-wraps-2.png",
                            ProductId = new Guid("fb64da22-9f41-4f37-adb8-f487ed95db0b")
                        },
                        new
                        {
                            ImageId = new Guid("51fbdd95-4e04-4e75-90a2-4433f5d31d45"),
                            ImageUrl = "/images/Products/everlast-hand-wraps/everlast-hand-wraps-3.png",
                            ProductId = new Guid("fb64da22-9f41-4f37-adb8-f487ed95db0b")
                        },
                        new
                        {
                            ImageId = new Guid("9c937a4e-1ef3-40b7-a1ce-8e0191147683"),
                            ImageUrl = "/images/Products/ringside-punching-bag/ringside-punching-bag-1.png",
                            ProductId = new Guid("9a8f5bd7-69cc-4e65-bc89-f47f35f0ccde")
                        },
                        new
                        {
                            ImageId = new Guid("2b3c66b6-955b-48a6-ad44-a923556d53cf"),
                            ImageUrl = "/images/Products/ringside-punching-bag/ringside-punching-bag-2.png",
                            ProductId = new Guid("9a8f5bd7-69cc-4e65-bc89-f47f35f0ccde")
                        },
                        new
                        {
                            ImageId = new Guid("b93fd0cf-b27f-49cb-9fd1-ed8c7ae0517c"),
                            ImageUrl = "/images/Products/ringside-punching-bag/ringside-punching-bag-3.png",
                            ProductId = new Guid("9a8f5bd7-69cc-4e65-bc89-f47f35f0ccde")
                        },
                        new
                        {
                            ImageId = new Guid("035113c2-3dcd-4175-aaed-d8d8026c8ccb"),
                            ImageUrl = "/images/Products/rdx-boxing-shoes/rdx-boxing-shoes-1.png",
                            ProductId = new Guid("c3cb695f-8672-426d-a839-fddf8eafa32f")
                        },
                        new
                        {
                            ImageId = new Guid("befbb641-ac71-4cf3-a9b0-61c2d35d2e9f"),
                            ImageUrl = "/images/Products/rdx-boxing-shoes/rdx-boxing-shoes-2.png",
                            ProductId = new Guid("c3cb695f-8672-426d-a839-fddf8eafa32f")
                        },
                        new
                        {
                            ImageId = new Guid("c0127216-d1d3-47e8-9334-36da0218e043"),
                            ImageUrl = "/images/Products/rdx-boxing-shoes/rdx-boxing-shoes-3.png",
                            ProductId = new Guid("c3cb695f-8672-426d-a839-fddf8eafa32f")
                        },
                        new
                        {
                            ImageId = new Guid("fa28b7ff-e4e5-497f-b7d1-9daa07b6f294"),
                            ImageUrl = "/images/Products/venum-challenger-shin-guards/venum-challenger-shin-guards-1.png",
                            ProductId = new Guid("7068aca7-4008-4c28-9495-479ce2114b3b")
                        },
                        new
                        {
                            ImageId = new Guid("dcf50c2a-b8ad-463c-a2f1-0529b197882d"),
                            ImageUrl = "/images/Products/venum-challenger-shin-guards/venum-challenger-shin-guards-2.png",
                            ProductId = new Guid("7068aca7-4008-4c28-9495-479ce2114b3b")
                        },
                        new
                        {
                            ImageId = new Guid("011efb89-123d-484f-8708-0196ba52575e"),
                            ImageUrl = "/images/Products/venum-challenger-shin-guards/venum-challenger-shin-guards-3.png",
                            ProductId = new Guid("7068aca7-4008-4c28-9495-479ce2114b3b")
                        },
                        new
                        {
                            ImageId = new Guid("8d9f5115-8c3b-4e77-bc3f-68a496e46926"),
                            ImageUrl = "/images/Products/fairtex-muay-thai-shorts/fairtex-muay-thai-shorts-1.png",
                            ProductId = new Guid("9aae063f-38f3-452e-9d04-183adef544a2")
                        },
                        new
                        {
                            ImageId = new Guid("0dac16b8-773d-4cd5-a11d-af9b3af92d65"),
                            ImageUrl = "/images/Products/fairtex-muay-thai-shorts/fairtex-muay-thai-shorts-2.png",
                            ProductId = new Guid("9aae063f-38f3-452e-9d04-183adef544a2")
                        },
                        new
                        {
                            ImageId = new Guid("43a45525-7a9f-43bf-af5b-4b39cb9d35e4"),
                            ImageUrl = "/images/Products/fairtex-muay-thai-shorts/fairtex-muay-thai-shorts-3.png",
                            ProductId = new Guid("9aae063f-38f3-452e-9d04-183adef544a2")
                        },
                        new
                        {
                            ImageId = new Guid("f3ab8b97-a954-4c25-81d8-9cbf49761f33"),
                            ImageUrl = "/images/Products/title-boxing-gloves/title-boxing-gloves-1.png",
                            ProductId = new Guid("dd11e94a-5a3c-4a37-9717-94270c18540d")
                        },
                        new
                        {
                            ImageId = new Guid("52a6f4cf-1c2b-4a2e-a683-4587916a5057"),
                            ImageUrl = "/images/Products/title-boxing-gloves/title-boxing-gloves-2.png",
                            ProductId = new Guid("dd11e94a-5a3c-4a37-9717-94270c18540d")
                        },
                        new
                        {
                            ImageId = new Guid("a7532de4-884b-48ca-ae3e-92d1a90d439d"),
                            ImageUrl = "/images/Products/title-boxing-gloves/title-boxing-gloves-3.png",
                            ProductId = new Guid("dd11e94a-5a3c-4a37-9717-94270c18540d")
                        },
                        new
                        {
                            ImageId = new Guid("848467b3-e00a-4618-84ce-715c9ca0e776"),
                            ImageUrl = "/images/Products/everlasr-pro-headgear/everlast-headgear-1.png",
                            ProductId = new Guid("f020749e-aa83-46b8-8dcd-d69147d60b60")
                        },
                        new
                        {
                            ImageId = new Guid("e6cbb4ee-8b29-4a65-bb75-7d4d6e94c135"),
                            ImageUrl = "/images/Products/everlasr-pro-headgear/everlast-headgear-2.png",
                            ProductId = new Guid("f020749e-aa83-46b8-8dcd-d69147d60b60")
                        },
                        new
                        {
                            ImageId = new Guid("cc4e4cef-9f39-48cd-83c9-88d9e1c64a35"),
                            ImageUrl = "/images/Products/everlasr-pro-headgear/everlast-headgear-3.png",
                            ProductId = new Guid("f020749e-aa83-46b8-8dcd-d69147d60b60")
                        });
                });

            modelBuilder.Entity("KickShop.Models.CartItem", b =>
                {
                    b.HasOne("KickShop.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KickShop.Models.ShoppingCart", "ShoppingCart")
                        .WithMany("CartItems")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("KickShop.Models.CustomerOrder", b =>
                {
                    b.HasOne("ApplicationUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KickShop.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("KickShop.Models.Product", b =>
                {
                    b.HasOne("KickShop.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KickShop.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("KickShop.Models.ShoppingCart", b =>
                {
                    b.HasOne("ApplicationUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductImage", b =>
                {
                    b.HasOne("KickShop.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KickShop.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("KickShop.Models.Product", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("KickShop.Models.ShoppingCart", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
