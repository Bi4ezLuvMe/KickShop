// <auto-generated />
using System;
using KickShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KickShop.Migrations
{
    [DbContext(typeof(KickShopDbContext))]
    [Migration("20241130101748_AddedProductSizeModel")]
    partial class AddedProductSizeModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("KickShop.Models.Brand", b =>
                {
                    b.Property<Guid>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The Address Of The Brand");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The Country Of Origin Of The The Brand");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("The Image Of The Brand");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Soft Delete Property");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The Name Of The Brand");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("The Phone Number Of The Brand");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = new Guid("b3264ae4-0d56-47a0-9cd0-016d0423afd7"),
                            Address = "123 Boxing Blvd, New York, NY",
                            Country = "USA",
                            Description = "Known as one of the oldest and most reputable brands in the boxing world, Everlast is a staple in combat sports. From gloves to training equipment, Everlast provides high-quality gear trusted by professional fighters and trainers alike.",
                            ImageUrl = "/images/Brands/everlast-logo.png",
                            IsDeleted = false,
                            Name = "Everlast",
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            BrandId = new Guid("ce1d95f0-5c19-4a29-8e6d-d2efc9c25fff"),
                            Address = "456 Sports Ave, London, UK",
                            Country = "UK",
                            Description = "RDX is renowned for its innovative designs and durable equipment that cater to a wide range of combat sports, including kickboxing, MMA, and boxing. Its focus on affordability and quality makes it a favorite among beginners and professionals.",
                            ImageUrl = "/images/Brands/rdx-logo.png",
                            IsDeleted = false,
                            Name = "RDX",
                            PhoneNumber = "456-789-0123"
                        },
                        new
                        {
                            BrandId = new Guid("bd258b07-bc9e-4fb4-86ea-c8dba4e664b8"),
                            Address = "789 Fight St, Toronto, ON",
                            Country = "Canada",
                            Description = "Hayabusa is synonymous with premium quality and cutting-edge technology in combat sports. Their gloves and apparel are designed to provide exceptional protection, performance, and style for fighters at all levels.",
                            ImageUrl = "/images/Brands/hayabusa-logo.png",
                            IsDeleted = false,
                            Name = "Hayabusa",
                            PhoneNumber = "789-012-3456"
                        },
                        new
                        {
                            BrandId = new Guid("e0699947-e12e-45b5-a224-9351b5667657"),
                            Address = "101 Martial Arts Way, Paris, FR",
                            Country = "France",
                            Description = "Venum is a globally recognized brand known for its bold designs and top-tier combat sports equipment. From gloves to apparel, Venum caters to athletes who demand performance and style in the ring and beyond.",
                            ImageUrl = "/images/Brands/venum-logo.png",
                            IsDeleted = false,
                            Name = "Venum",
                            PhoneNumber = "321-654-0987"
                        },
                        new
                        {
                            BrandId = new Guid("87210bf7-d293-4a64-af95-84956f70dfae"),
                            Address = "234 Fighter Rd, Bangkok, TH",
                            Country = "Thailand",
                            Description = "Fairtex is a legendary Thai brand specializing in Muay Thai and kickboxing gear. Renowned for its authenticity and quality, Fairtex is the choice of champions in traditional and modern combat sports.",
                            ImageUrl = "/images/Brands/fairtex-logo.png",
                            IsDeleted = false,
                            Name = "Fairtex",
                            PhoneNumber = "876-543-2109"
                        },
                        new
                        {
                            BrandId = new Guid("f23f3ec9-afa7-4208-a434-810f463813f8"),
                            Address = "345 Punch Ln, Los Angeles, CA",
                            Country = "USA",
                            Description = "Title Boxing is a leading brand offering an extensive range of boxing and kickboxing gear. Known for its reliability and innovation, Title Boxing supports athletes with training and competition essentials.",
                            ImageUrl = "/images/Brands/title-boxing-logo.png",
                            IsDeleted = false,
                            Name = "Title Boxing",
                            PhoneNumber = "987-654-3210"
                        },
                        new
                        {
                            BrandId = new Guid("5d7ae267-d077-42df-826e-a4f207c1313b"),
                            Address = "456 Ring Rd, Chicago, IL",
                            Country = "USA",
                            Description = "Ringside is a trusted name in boxing and kickboxing, providing high-performance equipment and apparel. Its focus on durability and craftsmanship has made it a favorite among gyms and professionals.",
                            ImageUrl = "/images/Brands/ringside-logo.png",
                            IsDeleted = false,
                            Name = "Ringside",
                            PhoneNumber = "234-567-8901"
                        },
                        new
                        {
                            BrandId = new Guid("41fdcbdb-7af7-408c-865b-f2b477564d69"),
                            Address = "567 Martial Arts Blvd, Oklahoma City, OK",
                            Country = "USA",
                            Description = "Century is known for its innovative training gear, including punching bags and protective equipment. Widely used in martial arts and kickboxing, Century products are designed to enhance performance and safety.",
                            ImageUrl = "/images/Brands/century-logo.png",
                            IsDeleted = false,
                            Name = "Century",
                            PhoneNumber = "345-678-9012"
                        },
                        new
                        {
                            BrandId = new Guid("c8aaba5e-4da9-421a-9502-821d5c6b9870"),
                            Address = "678 Fighter Ave, Miami, FL",
                            Country = "USA",
                            Description = "Sanabul is a modern combat sports brand offering stylish and affordable gear. Its products are designed for both beginners and experienced athletes, with a focus on innovation and performance.",
                            ImageUrl = "/images/Brands/sanabul-logo.png",
                            IsDeleted = false,
                            Name = "Sanabul",
                            PhoneNumber = "456-789-0123"
                        },
                        new
                        {
                            BrandId = new Guid("dc564a23-3ed0-489a-b761-3088744bea69"),
                            Address = "789 Kick Rd, Phuket, TH",
                            Country = "Thailand",
                            Description = "Twins Special is a renowned brand in Muay Thai and kickboxing, celebrated for its handcrafted gear. Their gloves and pads are known for their durability, quality, and traditional Thai craftsmanship.",
                            ImageUrl = "/images/Brands/twins-special-logo.png",
                            IsDeleted = false,
                            Name = "Twins Special",
                            PhoneNumber = "567-890-1234"
                        });
                });

            modelBuilder.Entity("KickShop.Models.CartItem", b =>
                {
                    b.Property<Guid>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Indentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Product Entity");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasComment("The Quantity Of The Product");

                    b.Property<Guid>("ShoppingCartId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The ShoppingCart Entity");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Selected Size Of The Product");

                    b.HasKey("CartItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CartsItems");
                });

            modelBuilder.Entity("KickShop.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Image For The Category");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Soft Delete Property");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("The Name Of The Category");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("4e759408-2bb2-4b9f-ae3f-ab5f6fb386c6"),
                            ImageUrl = "/images/Categegories/boxing-gloves.jfif",
                            IsDeleted = false,
                            Name = "Gloves"
                        },
                        new
                        {
                            CategoryId = new Guid("8f7b013f-2dbb-4ab9-af7c-d701203f0819"),
                            ImageUrl = "/images/Categories/clothing.png",
                            IsDeleted = false,
                            Name = "Clothing"
                        },
                        new
                        {
                            CategoryId = new Guid("f9b3cbac-43d3-4720-a790-e435b5cc33f5"),
                            ImageUrl = "/images/Categories/shin-guards.png",
                            IsDeleted = false,
                            Name = "Shinguards"
                        },
                        new
                        {
                            CategoryId = new Guid("8fac897d-1c6a-4532-82cc-d5dbe3aa58d5"),
                            ImageUrl = "/images/Categories/hand-wraps.png",
                            IsDeleted = false,
                            Name = "Hand Wraps"
                        },
                        new
                        {
                            CategoryId = new Guid("7b20ae15-7263-4c5b-b9dd-faa437c8d315"),
                            ImageUrl = "/images/Categories/head-gear.png",
                            IsDeleted = false,
                            Name = "Headgear"
                        },
                        new
                        {
                            CategoryId = new Guid("fe0a538d-dad1-47c0-b3eb-a54d94c64562"),
                            ImageUrl = "/images/Categories/mouth-guard.png",
                            IsDeleted = false,
                            Name = "Mouthguards"
                        },
                        new
                        {
                            CategoryId = new Guid("81bb71bd-4675-4285-b0d2-4c55c88ab605"),
                            ImageUrl = "/images/Categories/punching-bag.png",
                            IsDeleted = false,
                            Name = "Punching Bags"
                        },
                        new
                        {
                            CategoryId = new Guid("1cf9f2b4-0e64-4124-9cf8-4fd8fe538a0d"),
                            ImageUrl = "/images/Categories/training-equipment.png",
                            IsDeleted = false,
                            Name = "Training Equipment"
                        },
                        new
                        {
                            CategoryId = new Guid("ce7c29c0-3efa-4766-8e72-7bc59e68ead0"),
                            ImageUrl = "/images/Categories/boxing-shoes.png",
                            IsDeleted = false,
                            Name = "Shoes"
                        },
                        new
                        {
                            CategoryId = new Guid("363ae2d7-a678-49da-872a-4f4a9841923b"),
                            ImageUrl = "/images/Categories/protective-equipment.jfif",
                            IsDeleted = false,
                            Name = "Protective Gear"
                        });
                });

            modelBuilder.Entity("KickShop.Models.CustomerOrder", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Order Entity. Also Primary Key");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("Foreign Key To The ASP.NET User Entity. Also Primary Key");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Soft Delete Property");

                    b.HasKey("OrderId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomersOrders");
                });

            modelBuilder.Entity("KickShop.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Billing Address Of The Order");

                    b.Property<string>("BillingCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Billing City Of The Order");

                    b.Property<string>("BillingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Billing Name Of The Order");

                    b.Property<string>("BillingPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Billing PostCode Of The Order");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Soft Delete Property");

                    b.Property<string>("OrderDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Date When The Order Was Placed");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Status Of The Order");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("The Total Amount Of The Order");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("KickShop.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Brand Entity");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Category Entity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("The Description For The Product");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Soft Delete Property");

                    b.Property<string>("MainImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The Product Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasComment("The Price Of The Product");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int")
                        .HasComment("Current Stock Quantity");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("4250b84c-9f30-4c03-93d4-92eb58d08e02"),
                            BrandId = new Guid("ce1d95f0-5c19-4a29-8e6d-d2efc9c25fff"),
                            CategoryId = new Guid("4e759408-2bb2-4b9f-ae3f-ab5f6fb386c6"),
                            Description = "High-quality leather gloves for all training levels.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/rdx-boxing-gloves/rdx-boxing-glove-3.png",
                            Name = "RDX Boxing Gloves",
                            Price = 109.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = new Guid("adcc2ec4-d4f5-45c4-b386-5096508223e0"),
                            BrandId = new Guid("bd258b07-bc9e-4fb4-86ea-c8dba4e664b8"),
                            CategoryId = new Guid("4e759408-2bb2-4b9f-ae3f-ab5f6fb386c6"),
                            Description = "Top-notch gloves with exceptional durability.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/hayabusa-boxing-gloves/hayabusa-boxing-gloves-1.png",
                            Name = "Hayabusa T3 Boxing Gloves",
                            Price = 189.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = new Guid("1e45cd74-8414-40be-8718-24927f81b1a4"),
                            BrandId = new Guid("e0699947-e12e-45b5-a224-9351b5667657"),
                            CategoryId = new Guid("4e759408-2bb2-4b9f-ae3f-ab5f6fb386c6"),
                            Description = "Lightweight and designed for all skill levels.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/venum-challenger-gloves/venum-challenger-gloves-2.png",
                            Name = "Venum Challenger Gloves",
                            Price = 89.99m,
                            StockQuantity = 120
                        },
                        new
                        {
                            ProductId = new Guid("8940c59f-6466-4e0e-8945-486b7145d179"),
                            BrandId = new Guid("f23f3ec9-afa7-4208-a434-810f463813f8"),
                            CategoryId = new Guid("4e759408-2bb2-4b9f-ae3f-ab5f6fb386c6"),
                            Description = "Durable leather gloves for heavy bag workouts.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/title-boxing-bag/title-boxing-bag-1.png",
                            Name = "Title Boxing Leather Bag Gloves",
                            Price = 79.99m,
                            StockQuantity = 80
                        },
                        new
                        {
                            ProductId = new Guid("0c650eb0-67d8-42a1-bf25-980feb18c774"),
                            BrandId = new Guid("41fdcbdb-7af7-408c-865b-f2b477564d69"),
                            CategoryId = new Guid("8f7b013f-2dbb-4ab9-af7c-d701203f0819"),
                            Description = "Comfortable shorts designed for kickboxing.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/century-kickboxing-shorts/century-kickboxing-shorts-1.png",
                            Name = "Century Martial Arts Kickboxing Shorts",
                            Price = 79.99m,
                            StockQuantity = 75
                        },
                        new
                        {
                            ProductId = new Guid("099661b9-b063-4519-bce7-82abb2820761"),
                            BrandId = new Guid("c8aaba5e-4da9-421a-9502-821d5c6b9870"),
                            CategoryId = new Guid("f9b3cbac-43d3-4720-a790-e435b5cc33f5"),
                            Description = "High-quality shin guards for protection and mobility.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/sanabul-shin-guards/sanabul-shin-guards-1.png",
                            Name = "Sanabul Essential Shin Guards",
                            Price = 105.99m,
                            StockQuantity = 90
                        },
                        new
                        {
                            ProductId = new Guid("b00cb628-a48b-4fb7-8249-56314c1331d4"),
                            BrandId = new Guid("dc564a23-3ed0-489a-b761-3088744bea69"),
                            CategoryId = new Guid("7b20ae15-7263-4c5b-b9dd-faa437c8d315"),
                            Description = "Full-face protection with Twins quality.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/twins-special-headgear/twins-special-headgear-1.png",
                            Name = "Twins Special Headgear",
                            Price = 89.99m,
                            StockQuantity = 60
                        },
                        new
                        {
                            ProductId = new Guid("f858c8bd-435c-47c7-a043-a68b047ae167"),
                            BrandId = new Guid("b3264ae4-0d56-47a0-9cd0-016d0423afd7"),
                            CategoryId = new Guid("8fac897d-1c6a-4532-82cc-d5dbe3aa58d5"),
                            Description = "Classic wraps for wrist and knuckle protection.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/everlast-hand-wraps/everlast-hand-wraps-3.png",
                            Name = "Everlast Hand Wraps",
                            Price = 9.99m,
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = new Guid("e93fa539-a119-4d87-b082-2d3d6931400c"),
                            BrandId = new Guid("5d7ae267-d077-42df-826e-a4f207c1313b"),
                            CategoryId = new Guid("81bb71bd-4675-4285-b0d2-4c55c88ab605"),
                            Description = "Heavy-duty bag for all levels of training.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/ringside-punching-bag/ringside-punching-bag-1.png",
                            Name = "Ringside Punching Bag",
                            Price = 219.99m,
                            StockQuantity = 40
                        },
                        new
                        {
                            ProductId = new Guid("c8f80589-4602-4dc8-a6a8-9ed74ce130b3"),
                            BrandId = new Guid("ce1d95f0-5c19-4a29-8e6d-d2efc9c25fff"),
                            CategoryId = new Guid("ce7c29c0-3efa-4766-8e72-7bc59e68ead0"),
                            Description = "Lightweight and supportive for agility in the ring.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/rdx-boxing-shoes/rdx-boxing-shoes-1.png",
                            Name = "RDX Pro Boxing Shoes",
                            Price = 109.99m,
                            StockQuantity = 65
                        },
                        new
                        {
                            ProductId = new Guid("5c57b250-a067-4be8-a3af-43c54cc35498"),
                            BrandId = new Guid("e0699947-e12e-45b5-a224-9351b5667657"),
                            CategoryId = new Guid("f9b3cbac-43d3-4720-a790-e435b5cc33f5"),
                            Description = "High-durability shin guards ideal for intense training.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/venum-challenger-shin-guards/venum-challenger-shin-guards-1.png",
                            Name = "Venum Challenger Shin Guards",
                            Price = 105.99m,
                            StockQuantity = 95
                        },
                        new
                        {
                            ProductId = new Guid("f800af09-0788-45b6-98ac-ef6cb6dfc557"),
                            BrandId = new Guid("87210bf7-d293-4a64-af95-84956f70dfae"),
                            CategoryId = new Guid("8f7b013f-2dbb-4ab9-af7c-d701203f0819"),
                            Description = "Premium Muay Thai shorts with authentic design.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/fairtex-muay-thai-shorts/fairtex-muay-thai-shorts-1.png",
                            Name = "Fairtex Muay Thai Shorts",
                            Price = 84.99m,
                            StockQuantity = 90
                        },
                        new
                        {
                            ProductId = new Guid("78695d5e-e776-4580-aa0f-bcfdc113ae57"),
                            BrandId = new Guid("f23f3ec9-afa7-4208-a434-810f463813f8"),
                            CategoryId = new Guid("81bb71bd-4675-4285-b0d2-4c55c88ab605"),
                            Description = "Perfect for accuracy and reflex training.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/title-boxing-gloves/title-boxing-gloves-1.png",
                            Name = "Title Boxing Double End Bag",
                            Price = 99.99m,
                            StockQuantity = 70
                        },
                        new
                        {
                            ProductId = new Guid("0fa30324-ecd7-486b-acc8-5448f5e24817"),
                            BrandId = new Guid("b3264ae4-0d56-47a0-9cd0-016d0423afd7"),
                            CategoryId = new Guid("7b20ae15-7263-4c5b-b9dd-faa437c8d315"),
                            Description = "Full-protection headgear with durable padding.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/everlast-pro-headgear/everlast-headgear-1.png",
                            Name = "Everlast Pro Headgear",
                            Price = 89.99m,
                            StockQuantity = 50
                        });
                });

            modelBuilder.Entity("KickShop.Models.ProductSize", b =>
                {
                    b.Property<Guid>("ProductSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Product Model");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasComment("The Quantity Of The Sizes");

                    b.Property<int>("Size")
                        .HasColumnType("int")
                        .HasComment("The Size");

                    b.HasKey("ProductSizeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsSizes");

                    b.HasData(
                        new
                        {
                            ProductSizeId = new Guid("cef46b75-9b43-4a90-940f-747d8fca986f"),
                            ProductId = new Guid("4250b84c-9f30-4c03-93d4-92eb58d08e02"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("8a109324-7032-43fc-9479-1f039853c3ee"),
                            ProductId = new Guid("4250b84c-9f30-4c03-93d4-92eb58d08e02"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("2571d7bc-adf7-41f4-9adc-0255d95327b1"),
                            ProductId = new Guid("4250b84c-9f30-4c03-93d4-92eb58d08e02"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("cca8819a-964b-41f7-86a0-dad1ec081569"),
                            ProductId = new Guid("adcc2ec4-d4f5-45c4-b386-5096508223e0"),
                            Quantity = 3,
                            Size = 1
                        },
                        new
                        {
                            ProductSizeId = new Guid("e41dc0a8-c696-4cb0-9d51-92345b6a9d78"),
                            ProductId = new Guid("adcc2ec4-d4f5-45c4-b386-5096508223e0"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("ba124d2c-35fe-4a46-a864-6ef32bb9b2f9"),
                            ProductId = new Guid("adcc2ec4-d4f5-45c4-b386-5096508223e0"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("460d4dea-5d4c-48c9-953c-e713795a4057"),
                            ProductId = new Guid("1e45cd74-8414-40be-8718-24927f81b1a4"),
                            Quantity = 3,
                            Size = 4
                        },
                        new
                        {
                            ProductSizeId = new Guid("0de6c0ab-1b32-4751-8b30-234a9f095552"),
                            ProductId = new Guid("1e45cd74-8414-40be-8718-24927f81b1a4"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("4b035a0b-0771-4ffb-a2e0-c98ad97fd734"),
                            ProductId = new Guid("1e45cd74-8414-40be-8718-24927f81b1a4"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("7143719d-9a61-4cbd-820d-c5482fab997d"),
                            ProductId = new Guid("8940c59f-6466-4e0e-8945-486b7145d179"),
                            Quantity = 3,
                            Size = 5
                        },
                        new
                        {
                            ProductSizeId = new Guid("98e1406f-98a9-40f0-b828-09a9154c0eeb"),
                            ProductId = new Guid("8940c59f-6466-4e0e-8945-486b7145d179"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("d063af2d-3635-4a7b-9606-75e1fb06e219"),
                            ProductId = new Guid("8940c59f-6466-4e0e-8945-486b7145d179"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("1e75e766-8075-478d-8be3-603a95077eb5"),
                            ProductId = new Guid("0c650eb0-67d8-42a1-bf25-980feb18c774"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("7eb590c8-4cbe-4636-a6c7-ee1d0916d827"),
                            ProductId = new Guid("0c650eb0-67d8-42a1-bf25-980feb18c774"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("17599914-941d-4ab9-a882-ae88600bc0af"),
                            ProductId = new Guid("0c650eb0-67d8-42a1-bf25-980feb18c774"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("5b745cc9-e386-4109-9027-e6cb1738ee20"),
                            ProductId = new Guid("099661b9-b063-4519-bce7-82abb2820761"),
                            Quantity = 3,
                            Size = 6
                        },
                        new
                        {
                            ProductSizeId = new Guid("6243203f-a5c2-4e68-a019-eff936bd9114"),
                            ProductId = new Guid("099661b9-b063-4519-bce7-82abb2820761"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("5ea6e6d0-fbd9-4f97-84fa-774ea64fabe1"),
                            ProductId = new Guid("099661b9-b063-4519-bce7-82abb2820761"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("28230e5c-58dd-4803-9480-ed74db3053db"),
                            ProductId = new Guid("b00cb628-a48b-4fb7-8249-56314c1331d4"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("53620d0b-53f2-4517-86b4-8768a00a018d"),
                            ProductId = new Guid("b00cb628-a48b-4fb7-8249-56314c1331d4"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("7a4c7c0f-2f22-43d8-8622-4308c8383336"),
                            ProductId = new Guid("b00cb628-a48b-4fb7-8249-56314c1331d4"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("f1bc03c1-f186-4030-bddb-e326998d4004"),
                            ProductId = new Guid("4250b84c-9f30-4c03-93d4-92eb58d08e02"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("e909ff3d-0c91-4483-90dc-8e88fc78bb3d"),
                            ProductId = new Guid("4250b84c-9f30-4c03-93d4-92eb58d08e02"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("bca5ec9a-2d13-4dbd-a458-0188e1e7ebcb"),
                            ProductId = new Guid("4250b84c-9f30-4c03-93d4-92eb58d08e02"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("56a7b37f-25fc-4a15-8ac9-4c7cc95b1639"),
                            ProductId = new Guid("f858c8bd-435c-47c7-a043-a68b047ae167"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("6f3d7cfa-ef19-4877-bdf2-e1859f164f19"),
                            ProductId = new Guid("f858c8bd-435c-47c7-a043-a68b047ae167"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("b680f09a-b11f-4de7-b0cf-e0ae1c62491e"),
                            ProductId = new Guid("f858c8bd-435c-47c7-a043-a68b047ae167"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("6c663281-b284-4438-a1a1-1fc1e9980743"),
                            ProductId = new Guid("e93fa539-a119-4d87-b082-2d3d6931400c"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("96632849-7dde-47b7-a4ce-ad741bc91bc6"),
                            ProductId = new Guid("e93fa539-a119-4d87-b082-2d3d6931400c"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("4e7ca050-b095-4be1-a6e6-93437aff4e64"),
                            ProductId = new Guid("e93fa539-a119-4d87-b082-2d3d6931400c"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("7466d3f2-2d2c-41d9-95b6-17b732105abb"),
                            ProductId = new Guid("c8f80589-4602-4dc8-a6a8-9ed74ce130b3"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("7a8d744a-0784-432b-a6cb-b3ee3a7670b9"),
                            ProductId = new Guid("c8f80589-4602-4dc8-a6a8-9ed74ce130b3"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("ab3e5eb0-25ab-4a31-a4d4-c72446abefa7"),
                            ProductId = new Guid("c8f80589-4602-4dc8-a6a8-9ed74ce130b3"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("0b06206b-ee51-4cab-a3d7-1f55ce493a64"),
                            ProductId = new Guid("5c57b250-a067-4be8-a3af-43c54cc35498"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("64608187-0fc3-49f0-9cab-e40dbfa84029"),
                            ProductId = new Guid("5c57b250-a067-4be8-a3af-43c54cc35498"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("fce6bd74-9290-457e-a901-0f0248e56f78"),
                            ProductId = new Guid("5c57b250-a067-4be8-a3af-43c54cc35498"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("f0f9ee45-0907-4143-b365-354522a798da"),
                            ProductId = new Guid("f800af09-0788-45b6-98ac-ef6cb6dfc557"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("bee3110c-2c63-4b84-b41e-dfe089f62413"),
                            ProductId = new Guid("f800af09-0788-45b6-98ac-ef6cb6dfc557"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("3d8aef21-0dd5-4c6c-baba-84ee246ffabc"),
                            ProductId = new Guid("f800af09-0788-45b6-98ac-ef6cb6dfc557"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("2d49ee55-0d18-46cc-910c-5233c8989b29"),
                            ProductId = new Guid("78695d5e-e776-4580-aa0f-bcfdc113ae57"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("81525500-71a4-44b0-af95-e33dfba4b608"),
                            ProductId = new Guid("78695d5e-e776-4580-aa0f-bcfdc113ae57"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("b1754720-f319-4c19-81a0-adcfc13d6117"),
                            ProductId = new Guid("78695d5e-e776-4580-aa0f-bcfdc113ae57"),
                            Quantity = 5,
                            Size = 0
                        });
                });

            modelBuilder.Entity("KickShop.Models.ShoppingCart", b =>
                {
                    b.Property<Guid>("ShoppingCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("Foreign Key To The Customer Entity");

                    b.Property<string>("DateCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Date When The Shopping Cart Was Created");

                    b.HasKey("ShoppingCartId");

                    b.HasIndex("CustomerId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProductImage", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("The Url To The Image");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Product Entity To Which The Picture Belongs");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsImages");

                    b.HasData(
                        new
                        {
                            ImageId = new Guid("84227c06-0bbc-4bc3-a435-2da1927915e2"),
                            ImageUrl = "/images/Products/rdx-boxing-gloves/rdx-boxing-glove-1.png",
                            ProductId = new Guid("4250b84c-9f30-4c03-93d4-92eb58d08e02")
                        },
                        new
                        {
                            ImageId = new Guid("1249ce56-063d-433a-b91a-83bf61600a82"),
                            ImageUrl = "/images/Products/rdx-boxing-gloves/rdx-boxing-glove-2.png",
                            ProductId = new Guid("4250b84c-9f30-4c03-93d4-92eb58d08e02")
                        },
                        new
                        {
                            ImageId = new Guid("6f8c6ad0-fa8a-4762-bde6-b87fbec2b83d"),
                            ImageUrl = "/images/Products/rdx-boxing-gloves/rdx-boxing-glove-3.png",
                            ProductId = new Guid("4250b84c-9f30-4c03-93d4-92eb58d08e02")
                        },
                        new
                        {
                            ImageId = new Guid("aa317113-eb02-4553-932f-0659afb672c7"),
                            ImageUrl = "/images/Products/hayabusa-boxing-gloves/hayabusa-boxing-gloves-1.png",
                            ProductId = new Guid("adcc2ec4-d4f5-45c4-b386-5096508223e0")
                        },
                        new
                        {
                            ImageId = new Guid("e2d7918c-f3ff-4b80-b2ee-91f96afe9f86"),
                            ImageUrl = "/images/Products/hayabusa-boxing-gloves/hayabusa-boxing-gloves-2.png",
                            ProductId = new Guid("adcc2ec4-d4f5-45c4-b386-5096508223e0")
                        },
                        new
                        {
                            ImageId = new Guid("c125731c-2674-48a5-ac13-3e791152c25d"),
                            ImageUrl = "/images/Products/hayabusa-boxing-gloves/hayabusa-boxing-gloves-3.png",
                            ProductId = new Guid("adcc2ec4-d4f5-45c4-b386-5096508223e0")
                        },
                        new
                        {
                            ImageId = new Guid("a134f408-2f64-4365-b521-c7da3eb067e6"),
                            ImageUrl = "/images/Products/venum-challenger-gloves/venum-challenger-gloves-1.png",
                            ProductId = new Guid("1e45cd74-8414-40be-8718-24927f81b1a4")
                        },
                        new
                        {
                            ImageId = new Guid("73f3a3d5-61ff-4914-9f8b-8aa5d6bc0d72"),
                            ImageUrl = "/images/Products/venum-challenger-gloves/venum-challenger-gloves-2.png",
                            ProductId = new Guid("1e45cd74-8414-40be-8718-24927f81b1a4")
                        },
                        new
                        {
                            ImageId = new Guid("05bdfe57-556a-4c35-a252-f5628586f678"),
                            ImageUrl = "/images/Products/venum-challenger-gloves/venum-challenger-gloves-3.png",
                            ProductId = new Guid("1e45cd74-8414-40be-8718-24927f81b1a4")
                        },
                        new
                        {
                            ImageId = new Guid("f1c0d30e-a94d-4bc3-8422-d0efcf2a1c44"),
                            ImageUrl = "/images/Products/title-boxing-bag/title-boxing-bag-1.png",
                            ProductId = new Guid("8940c59f-6466-4e0e-8945-486b7145d179")
                        },
                        new
                        {
                            ImageId = new Guid("925cdf79-68b1-43a1-8ffd-89b3c9305188"),
                            ImageUrl = "/images/Products/title-boxing-bag/title-boxing-bag-2.png",
                            ProductId = new Guid("8940c59f-6466-4e0e-8945-486b7145d179")
                        },
                        new
                        {
                            ImageId = new Guid("0f935ee2-19fd-4c41-be9e-d9b8daaadc27"),
                            ImageUrl = "/images/Products/title-boxing-bag/title-boxing-bag-3.png",
                            ProductId = new Guid("8940c59f-6466-4e0e-8945-486b7145d179")
                        },
                        new
                        {
                            ImageId = new Guid("08d99d05-0945-4e51-a751-59d72978f089"),
                            ImageUrl = "/images/Products/century-kickboxing-shorts/century-kickboxing-shorts-1.png",
                            ProductId = new Guid("0c650eb0-67d8-42a1-bf25-980feb18c774")
                        },
                        new
                        {
                            ImageId = new Guid("65cd7419-91c5-4a04-9090-5be332451473"),
                            ImageUrl = "/images/Products/century-kickboxing-shorts/century-kickboxing-shorts-2.png",
                            ProductId = new Guid("0c650eb0-67d8-42a1-bf25-980feb18c774")
                        },
                        new
                        {
                            ImageId = new Guid("31fea592-39a4-4c10-ad00-c9f19c82800a"),
                            ImageUrl = "/images/Products/century-kickboxing-shorts/century-kickboxing-shorts-3.png",
                            ProductId = new Guid("0c650eb0-67d8-42a1-bf25-980feb18c774")
                        },
                        new
                        {
                            ImageId = new Guid("56c7b526-0e08-4eae-9b86-f436919d11ba"),
                            ImageUrl = "/images/Products/sanabul-shin-guards/sanabul-shin-guards-1.png",
                            ProductId = new Guid("099661b9-b063-4519-bce7-82abb2820761")
                        },
                        new
                        {
                            ImageId = new Guid("5c8da350-bfdc-423b-81ab-ded14fc0a7ff"),
                            ImageUrl = "/images/Products/sanabul-shin-guards/sanabul-shin-guards-2.png",
                            ProductId = new Guid("099661b9-b063-4519-bce7-82abb2820761")
                        },
                        new
                        {
                            ImageId = new Guid("478c030c-3581-4fa9-8d1e-f7a6d719f63b"),
                            ImageUrl = "/images/Products/sanabul-shin-guards/sanabul-shin-guards-3.png",
                            ProductId = new Guid("099661b9-b063-4519-bce7-82abb2820761")
                        },
                        new
                        {
                            ImageId = new Guid("092a29b6-8f6e-446f-9e2a-9457b1294be9"),
                            ImageUrl = "/images/Products/twins-special-headgear/twins-special-headgear-1.png",
                            ProductId = new Guid("b00cb628-a48b-4fb7-8249-56314c1331d4")
                        },
                        new
                        {
                            ImageId = new Guid("1710e139-dc76-47bb-8ddb-48d91e3cc815"),
                            ImageUrl = "/images/Products/twins-special-headgear/twins-special-headgear-2.png",
                            ProductId = new Guid("b00cb628-a48b-4fb7-8249-56314c1331d4")
                        },
                        new
                        {
                            ImageId = new Guid("aae97d3f-56d0-4377-90a9-c55245719fb8"),
                            ImageUrl = "/images/Products/twins-special-headgear/twins-shin-headgear-3.png",
                            ProductId = new Guid("b00cb628-a48b-4fb7-8249-56314c1331d4")
                        },
                        new
                        {
                            ImageId = new Guid("a8a627cb-30e2-4884-a3ac-bc9feb60448f"),
                            ImageUrl = "/images/Products/everlast-hand-wraps/everlast-hand-wraps-1.png",
                            ProductId = new Guid("f858c8bd-435c-47c7-a043-a68b047ae167")
                        },
                        new
                        {
                            ImageId = new Guid("d0628309-84a3-4582-898a-64afdc55d856"),
                            ImageUrl = "/images/Products/everlast-hand-wraps/everlast-hand-wraps-2.png",
                            ProductId = new Guid("f858c8bd-435c-47c7-a043-a68b047ae167")
                        },
                        new
                        {
                            ImageId = new Guid("8ca0acee-bcda-460a-9bab-8bdc2c5d926d"),
                            ImageUrl = "/images/Products/everlast-hand-wraps/everlast-hand-wraps-3.png",
                            ProductId = new Guid("f858c8bd-435c-47c7-a043-a68b047ae167")
                        },
                        new
                        {
                            ImageId = new Guid("44ad5fc4-498c-40e9-b4d1-542af305b883"),
                            ImageUrl = "/images/Products/ringside-punching-bag/ringside-punching-bag-1.png",
                            ProductId = new Guid("e93fa539-a119-4d87-b082-2d3d6931400c")
                        },
                        new
                        {
                            ImageId = new Guid("9a6ce95c-c0cf-4f8b-953a-30cb4c27c186"),
                            ImageUrl = "/images/Products/ringside-punching-bag/ringside-punching-bag-2.png",
                            ProductId = new Guid("e93fa539-a119-4d87-b082-2d3d6931400c")
                        },
                        new
                        {
                            ImageId = new Guid("68eff0bd-ecd9-4af3-90dc-4cf685211d39"),
                            ImageUrl = "/images/Products/ringside-punching-bag/ringside-punching-bag-3.png",
                            ProductId = new Guid("e93fa539-a119-4d87-b082-2d3d6931400c")
                        },
                        new
                        {
                            ImageId = new Guid("6b4d5efa-52ba-46b7-8719-7f3b80c39fc8"),
                            ImageUrl = "/images/Products/rdx-boxing-shoes/rdx-boxing-shoes-1.png",
                            ProductId = new Guid("c8f80589-4602-4dc8-a6a8-9ed74ce130b3")
                        },
                        new
                        {
                            ImageId = new Guid("7121476d-6a7f-4b1b-9003-99732c906ff0"),
                            ImageUrl = "/images/Products/rdx-boxing-shoes/rdx-boxing-shoes-2.png",
                            ProductId = new Guid("c8f80589-4602-4dc8-a6a8-9ed74ce130b3")
                        },
                        new
                        {
                            ImageId = new Guid("05c15053-ec60-4081-9500-8c7b4971f89c"),
                            ImageUrl = "/images/Products/rdx-boxing-shoes/rdx-boxing-shoes-3.png",
                            ProductId = new Guid("c8f80589-4602-4dc8-a6a8-9ed74ce130b3")
                        },
                        new
                        {
                            ImageId = new Guid("763967fe-9591-4c3c-b33a-4d4f1d4c5453"),
                            ImageUrl = "/images/Products/venum-challenger-shin-guards/venum-challenger-shin-guards-1.png",
                            ProductId = new Guid("5c57b250-a067-4be8-a3af-43c54cc35498")
                        },
                        new
                        {
                            ImageId = new Guid("0a3a5138-da15-40bc-a2eb-8e410c49033e"),
                            ImageUrl = "/images/Products/venum-challenger-shin-guards/venum-challenger-shin-guards-2.png",
                            ProductId = new Guid("5c57b250-a067-4be8-a3af-43c54cc35498")
                        },
                        new
                        {
                            ImageId = new Guid("70509756-4e3e-4e1a-b17c-0546caa6fdde"),
                            ImageUrl = "/images/Products/venum-challenger-shin-guards/venum-challenger-shin-guards-3.png",
                            ProductId = new Guid("5c57b250-a067-4be8-a3af-43c54cc35498")
                        },
                        new
                        {
                            ImageId = new Guid("a54863e3-3f56-499f-a47d-ff1454c7ff6c"),
                            ImageUrl = "/images/Products/fairtex-muay-thai-shorts/fairtex-muay-thai-shorts-1.png",
                            ProductId = new Guid("f800af09-0788-45b6-98ac-ef6cb6dfc557")
                        },
                        new
                        {
                            ImageId = new Guid("01fcff3e-ddcf-4ba2-b8b9-bc7b03754158"),
                            ImageUrl = "/images/Products/fairtex-muay-thai-shorts/fairtex-muay-thai-shorts-2.png",
                            ProductId = new Guid("f800af09-0788-45b6-98ac-ef6cb6dfc557")
                        },
                        new
                        {
                            ImageId = new Guid("568560e8-44ee-4e36-a11c-4d3bb4dd075e"),
                            ImageUrl = "/images/Products/fairtex-muay-thai-shorts/fairtex-muay-thai-shorts-3.png",
                            ProductId = new Guid("f800af09-0788-45b6-98ac-ef6cb6dfc557")
                        },
                        new
                        {
                            ImageId = new Guid("21d7b796-28b3-46e6-923d-c222c114674d"),
                            ImageUrl = "/images/Products/title-boxing-gloves/title-boxing-gloves-1.png",
                            ProductId = new Guid("78695d5e-e776-4580-aa0f-bcfdc113ae57")
                        },
                        new
                        {
                            ImageId = new Guid("4520e4fe-d36e-4fc8-be52-9193bca83cb1"),
                            ImageUrl = "/images/Products/title-boxing-gloves/title-boxing-gloves-2.png",
                            ProductId = new Guid("78695d5e-e776-4580-aa0f-bcfdc113ae57")
                        },
                        new
                        {
                            ImageId = new Guid("c87256c5-effb-4ce8-a252-75a3dd22b8d4"),
                            ImageUrl = "/images/Products/title-boxing-gloves/title-boxing-gloves-3.png",
                            ProductId = new Guid("78695d5e-e776-4580-aa0f-bcfdc113ae57")
                        },
                        new
                        {
                            ImageId = new Guid("4a4e7847-a702-4251-bf39-e958493c447c"),
                            ImageUrl = "/images/Products/everlasr-pro-headgear/everlast-headgear-1.png",
                            ProductId = new Guid("0fa30324-ecd7-486b-acc8-5448f5e24817")
                        },
                        new
                        {
                            ImageId = new Guid("a50a7f4b-8938-4b41-8742-a091cb1de909"),
                            ImageUrl = "/images/Products/everlasr-pro-headgear/everlast-headgear-2.png",
                            ProductId = new Guid("0fa30324-ecd7-486b-acc8-5448f5e24817")
                        },
                        new
                        {
                            ImageId = new Guid("e833d14c-cdc6-4d4d-aa32-9eb630ac1e16"),
                            ImageUrl = "/images/Products/everlasr-pro-headgear/everlast-headgear-3.png",
                            ProductId = new Guid("0fa30324-ecd7-486b-acc8-5448f5e24817")
                        });
                });

            modelBuilder.Entity("KickShop.Models.CartItem", b =>
                {
                    b.HasOne("KickShop.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KickShop.Models.ShoppingCart", "ShoppingCart")
                        .WithMany("CartItems")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("KickShop.Models.CustomerOrder", b =>
                {
                    b.HasOne("ApplicationUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KickShop.Models.Order", "Order")
                        .WithMany("CustomerOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("KickShop.Models.Product", b =>
                {
                    b.HasOne("KickShop.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KickShop.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("KickShop.Models.ProductSize", b =>
                {
                    b.HasOne("KickShop.Models.Product", "Product")
                        .WithMany("Sizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KickShop.Models.ShoppingCart", b =>
                {
                    b.HasOne("ApplicationUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductImage", b =>
                {
                    b.HasOne("KickShop.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KickShop.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("KickShop.Models.Order", b =>
                {
                    b.Navigation("CustomerOrders");
                });

            modelBuilder.Entity("KickShop.Models.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("KickShop.Models.ShoppingCart", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
