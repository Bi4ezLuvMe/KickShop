// <auto-generated />
using System;
using KickShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KickShop.Migrations
{
    [DbContext(typeof(KickShopDbContext))]
    [Migration("20241130181857_MadeProductImagesNullube")]
    partial class MadeProductImagesNullube
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("KickShop.Models.Brand", b =>
                {
                    b.Property<Guid>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The Address Of The Brand");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The Country Of Origin Of The The Brand");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("The Image Of The Brand");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Soft Delete Property");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The Name Of The Brand");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("The Phone Number Of The Brand");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = new Guid("aaa2005b-aee5-476f-8d81-0f2778b7b541"),
                            Address = "123 Boxing Blvd, New York, NY",
                            Country = "USA",
                            Description = "Known as one of the oldest and most reputable brands in the boxing world, Everlast is a staple in combat sports. From gloves to training equipment, Everlast provides high-quality gear trusted by professional fighters and trainers alike.",
                            ImageUrl = "/images/Brands/everlast-logo.png",
                            IsDeleted = false,
                            Name = "Everlast",
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            BrandId = new Guid("eb95471e-1a08-4f59-b339-d3776465c7ba"),
                            Address = "456 Sports Ave, London, UK",
                            Country = "UK",
                            Description = "RDX is renowned for its innovative designs and durable equipment that cater to a wide range of combat sports, including kickboxing, MMA, and boxing. Its focus on affordability and quality makes it a favorite among beginners and professionals.",
                            ImageUrl = "/images/Brands/rdx-logo.png",
                            IsDeleted = false,
                            Name = "RDX",
                            PhoneNumber = "456-789-0123"
                        },
                        new
                        {
                            BrandId = new Guid("e64cc050-5a8a-4166-8860-64c2561cc99c"),
                            Address = "789 Fight St, Toronto, ON",
                            Country = "Canada",
                            Description = "Hayabusa is synonymous with premium quality and cutting-edge technology in combat sports. Their gloves and apparel are designed to provide exceptional protection, performance, and style for fighters at all levels.",
                            ImageUrl = "/images/Brands/hayabusa-logo.png",
                            IsDeleted = false,
                            Name = "Hayabusa",
                            PhoneNumber = "789-012-3456"
                        },
                        new
                        {
                            BrandId = new Guid("b92e5835-81bf-4b21-9334-d1f6f57d9326"),
                            Address = "101 Martial Arts Way, Paris, FR",
                            Country = "France",
                            Description = "Venum is a globally recognized brand known for its bold designs and top-tier combat sports equipment. From gloves to apparel, Venum caters to athletes who demand performance and style in the ring and beyond.",
                            ImageUrl = "/images/Brands/venum-logo.png",
                            IsDeleted = false,
                            Name = "Venum",
                            PhoneNumber = "321-654-0987"
                        },
                        new
                        {
                            BrandId = new Guid("e4e0bbc3-9032-4cdd-bd18-a560a551272b"),
                            Address = "234 Fighter Rd, Bangkok, TH",
                            Country = "Thailand",
                            Description = "Fairtex is a legendary Thai brand specializing in Muay Thai and kickboxing gear. Renowned for its authenticity and quality, Fairtex is the choice of champions in traditional and modern combat sports.",
                            ImageUrl = "/images/Brands/fairtex-logo.png",
                            IsDeleted = false,
                            Name = "Fairtex",
                            PhoneNumber = "876-543-2109"
                        },
                        new
                        {
                            BrandId = new Guid("e75b2bfa-2387-4358-9178-6a55961c308f"),
                            Address = "345 Punch Ln, Los Angeles, CA",
                            Country = "USA",
                            Description = "Title Boxing is a leading brand offering an extensive range of boxing and kickboxing gear. Known for its reliability and innovation, Title Boxing supports athletes with training and competition essentials.",
                            ImageUrl = "/images/Brands/title-boxing-logo.png",
                            IsDeleted = false,
                            Name = "Title Boxing",
                            PhoneNumber = "987-654-3210"
                        },
                        new
                        {
                            BrandId = new Guid("a2f70f2e-faea-4070-9059-f3bcc9baba3a"),
                            Address = "456 Ring Rd, Chicago, IL",
                            Country = "USA",
                            Description = "Ringside is a trusted name in boxing and kickboxing, providing high-performance equipment and apparel. Its focus on durability and craftsmanship has made it a favorite among gyms and professionals.",
                            ImageUrl = "/images/Brands/ringside-logo.png",
                            IsDeleted = false,
                            Name = "Ringside",
                            PhoneNumber = "234-567-8901"
                        },
                        new
                        {
                            BrandId = new Guid("8dd18690-744f-41db-9188-17db973744ac"),
                            Address = "567 Martial Arts Blvd, Oklahoma City, OK",
                            Country = "USA",
                            Description = "Century is known for its innovative training gear, including punching bags and protective equipment. Widely used in martial arts and kickboxing, Century products are designed to enhance performance and safety.",
                            ImageUrl = "/images/Brands/century-logo.png",
                            IsDeleted = false,
                            Name = "Century",
                            PhoneNumber = "345-678-9012"
                        },
                        new
                        {
                            BrandId = new Guid("b8bf5096-a6c7-4de9-90fb-28f11ce8cf9f"),
                            Address = "678 Fighter Ave, Miami, FL",
                            Country = "USA",
                            Description = "Sanabul is a modern combat sports brand offering stylish and affordable gear. Its products are designed for both beginners and experienced athletes, with a focus on innovation and performance.",
                            ImageUrl = "/images/Brands/sanabul-logo.png",
                            IsDeleted = false,
                            Name = "Sanabul",
                            PhoneNumber = "456-789-0123"
                        },
                        new
                        {
                            BrandId = new Guid("dc1bdc6f-0b1c-4273-94d8-72e90adca6b8"),
                            Address = "789 Kick Rd, Phuket, TH",
                            Country = "Thailand",
                            Description = "Twins Special is a renowned brand in Muay Thai and kickboxing, celebrated for its handcrafted gear. Their gloves and pads are known for their durability, quality, and traditional Thai craftsmanship.",
                            ImageUrl = "/images/Brands/twins-special-logo.png",
                            IsDeleted = false,
                            Name = "Twins Special",
                            PhoneNumber = "567-890-1234"
                        });
                });

            modelBuilder.Entity("KickShop.Models.CartItem", b =>
                {
                    b.Property<Guid>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Indentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Product Entity");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasComment("The Quantity Of The Product");

                    b.Property<Guid>("ShoppingCartId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The ShoppingCart Entity");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Selected Size Of The Product");

                    b.HasKey("CartItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CartsItems");
                });

            modelBuilder.Entity("KickShop.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Image For The Category");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Soft Delete Property");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("The Name Of The Category");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("dddaf511-15a3-4b3a-8a19-5b86e9ad2e37"),
                            ImageUrl = "/images/Categegories/boxing-gloves.jfif",
                            IsDeleted = false,
                            Name = "Gloves"
                        },
                        new
                        {
                            CategoryId = new Guid("79b2bbbf-45d5-4bc1-9f24-dc46aa28cc1f"),
                            ImageUrl = "/images/Categories/clothing.png",
                            IsDeleted = false,
                            Name = "Clothing"
                        },
                        new
                        {
                            CategoryId = new Guid("1c23d6cd-494e-482f-977b-7e0424d452ec"),
                            ImageUrl = "/images/Categories/shin-guards.png",
                            IsDeleted = false,
                            Name = "Shinguards"
                        },
                        new
                        {
                            CategoryId = new Guid("20f235f4-493d-4c79-b885-e11caa02dc87"),
                            ImageUrl = "/images/Categories/hand-wraps.png",
                            IsDeleted = false,
                            Name = "Hand Wraps"
                        },
                        new
                        {
                            CategoryId = new Guid("0da1de74-b5b6-4c11-b48c-736cc36fed1c"),
                            ImageUrl = "/images/Categories/head-gear.png",
                            IsDeleted = false,
                            Name = "Headgear"
                        },
                        new
                        {
                            CategoryId = new Guid("92ebddb4-d2f7-4ab2-8184-7cc5b914ee6e"),
                            ImageUrl = "/images/Categories/mouth-guard.png",
                            IsDeleted = false,
                            Name = "Mouthguards"
                        },
                        new
                        {
                            CategoryId = new Guid("410af451-d9e6-4e12-b047-364aa44806fb"),
                            ImageUrl = "/images/Categories/punching-bag.png",
                            IsDeleted = false,
                            Name = "Punching Bags"
                        },
                        new
                        {
                            CategoryId = new Guid("12f6bcd6-c132-44a4-b2e9-2ea4e4dd801b"),
                            ImageUrl = "/images/Categories/training-equipment.png",
                            IsDeleted = false,
                            Name = "Training Equipment"
                        },
                        new
                        {
                            CategoryId = new Guid("c410d212-9230-48bc-ad56-25afdbfad9cb"),
                            ImageUrl = "/images/Categories/boxing-shoes.png",
                            IsDeleted = false,
                            Name = "Shoes"
                        },
                        new
                        {
                            CategoryId = new Guid("b2099065-84da-4598-816d-6820000e5ef5"),
                            ImageUrl = "/images/Categories/protective-equipment.jfif",
                            IsDeleted = false,
                            Name = "Protective Gear"
                        });
                });

            modelBuilder.Entity("KickShop.Models.CustomerOrder", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Order Entity. Also Primary Key");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("Foreign Key To The ASP.NET User Entity. Also Primary Key");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Soft Delete Property");

                    b.HasKey("OrderId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomersOrders");
                });

            modelBuilder.Entity("KickShop.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Billing Address Of The Order");

                    b.Property<string>("BillingCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Billing City Of The Order");

                    b.Property<string>("BillingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Billing Name Of The Order");

                    b.Property<string>("BillingPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Billing PostCode Of The Order");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Soft Delete Property");

                    b.Property<string>("OrderDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Date When The Order Was Placed");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Status Of The Order");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("The Total Amount Of The Order");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("KickShop.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Brand Entity");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Category Entity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("The Description For The Product");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Soft Delete Property");

                    b.Property<string>("MainImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The Product Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasComment("The Price Of The Product");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int")
                        .HasComment("Current Stock Quantity");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("fbc86e42-74ba-4da8-bd63-00a6126a8f41"),
                            BrandId = new Guid("eb95471e-1a08-4f59-b339-d3776465c7ba"),
                            CategoryId = new Guid("dddaf511-15a3-4b3a-8a19-5b86e9ad2e37"),
                            Description = "High-quality leather gloves for all training levels.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/rdx-boxing-gloves/rdx-boxing-glove-3.png",
                            Name = "RDX Boxing Gloves",
                            Price = 109.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = new Guid("523a9aad-21f7-4aef-8d55-37a11f8a81e9"),
                            BrandId = new Guid("e64cc050-5a8a-4166-8860-64c2561cc99c"),
                            CategoryId = new Guid("dddaf511-15a3-4b3a-8a19-5b86e9ad2e37"),
                            Description = "Top-notch gloves with exceptional durability.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/hayabusa-boxing-gloves/hayabusa-boxing-gloves-1.png",
                            Name = "Hayabusa T3 Boxing Gloves",
                            Price = 189.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = new Guid("f02fc5a7-e275-41c4-937b-2242ff3811b4"),
                            BrandId = new Guid("b92e5835-81bf-4b21-9334-d1f6f57d9326"),
                            CategoryId = new Guid("dddaf511-15a3-4b3a-8a19-5b86e9ad2e37"),
                            Description = "Lightweight and designed for all skill levels.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/venum-challenger-gloves/venum-challenger-gloves-2.png",
                            Name = "Venum Challenger Gloves",
                            Price = 89.99m,
                            StockQuantity = 120
                        },
                        new
                        {
                            ProductId = new Guid("3e690f70-0989-46f7-82ac-45a15f80afb1"),
                            BrandId = new Guid("e75b2bfa-2387-4358-9178-6a55961c308f"),
                            CategoryId = new Guid("dddaf511-15a3-4b3a-8a19-5b86e9ad2e37"),
                            Description = "Durable leather gloves for heavy bag workouts.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/title-boxing-bag/title-boxing-bag-1.png",
                            Name = "Title Boxing Leather Bag Gloves",
                            Price = 79.99m,
                            StockQuantity = 80
                        },
                        new
                        {
                            ProductId = new Guid("90127731-f304-4cf1-a238-c4dd151f96ea"),
                            BrandId = new Guid("8dd18690-744f-41db-9188-17db973744ac"),
                            CategoryId = new Guid("79b2bbbf-45d5-4bc1-9f24-dc46aa28cc1f"),
                            Description = "Comfortable shorts designed for kickboxing.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/century-kickboxing-shorts/century-kickboxing-shorts-1.png",
                            Name = "Century Martial Arts Kickboxing Shorts",
                            Price = 79.99m,
                            StockQuantity = 75
                        },
                        new
                        {
                            ProductId = new Guid("a19a673a-be70-4967-aa88-979a4864e3e3"),
                            BrandId = new Guid("b8bf5096-a6c7-4de9-90fb-28f11ce8cf9f"),
                            CategoryId = new Guid("1c23d6cd-494e-482f-977b-7e0424d452ec"),
                            Description = "High-quality shin guards for protection and mobility.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/sanabul-shin-guards/sanabul-shin-guards-1.png",
                            Name = "Sanabul Essential Shin Guards",
                            Price = 105.99m,
                            StockQuantity = 90
                        },
                        new
                        {
                            ProductId = new Guid("b50a1d20-f032-41aa-903d-ea56e9ac8e1f"),
                            BrandId = new Guid("dc1bdc6f-0b1c-4273-94d8-72e90adca6b8"),
                            CategoryId = new Guid("0da1de74-b5b6-4c11-b48c-736cc36fed1c"),
                            Description = "Full-face protection with Twins quality.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/twins-special-headgear/twins-special-headgear-1.png",
                            Name = "Twins Special Headgear",
                            Price = 89.99m,
                            StockQuantity = 60
                        },
                        new
                        {
                            ProductId = new Guid("166dcc51-a346-4607-8102-54e7e6ba48ab"),
                            BrandId = new Guid("aaa2005b-aee5-476f-8d81-0f2778b7b541"),
                            CategoryId = new Guid("20f235f4-493d-4c79-b885-e11caa02dc87"),
                            Description = "Classic wraps for wrist and knuckle protection.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/everlast-hand-wraps/everlast-hand-wraps-3.png",
                            Name = "Everlast Hand Wraps",
                            Price = 9.99m,
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = new Guid("c9443397-a67d-49a8-9140-d321b5ce6c1b"),
                            BrandId = new Guid("a2f70f2e-faea-4070-9059-f3bcc9baba3a"),
                            CategoryId = new Guid("410af451-d9e6-4e12-b047-364aa44806fb"),
                            Description = "Heavy-duty bag for all levels of training.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/ringside-punching-bag/ringside-punching-bag-1.png",
                            Name = "Ringside Punching Bag",
                            Price = 219.99m,
                            StockQuantity = 40
                        },
                        new
                        {
                            ProductId = new Guid("5110dda2-a6ae-472c-9f45-3dda1b7ce0ce"),
                            BrandId = new Guid("eb95471e-1a08-4f59-b339-d3776465c7ba"),
                            CategoryId = new Guid("c410d212-9230-48bc-ad56-25afdbfad9cb"),
                            Description = "Lightweight and supportive for agility in the ring.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/rdx-boxing-shoes/rdx-boxing-shoes-1.png",
                            Name = "RDX Pro Boxing Shoes",
                            Price = 109.99m,
                            StockQuantity = 65
                        },
                        new
                        {
                            ProductId = new Guid("8310c25f-88a5-4c25-8586-31a737135336"),
                            BrandId = new Guid("b92e5835-81bf-4b21-9334-d1f6f57d9326"),
                            CategoryId = new Guid("1c23d6cd-494e-482f-977b-7e0424d452ec"),
                            Description = "High-durability shin guards ideal for intense training.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/venum-challenger-shin-guards/venum-challenger-shin-guards-1.png",
                            Name = "Venum Challenger Shin Guards",
                            Price = 105.99m,
                            StockQuantity = 95
                        },
                        new
                        {
                            ProductId = new Guid("1e8851a0-2c59-4997-bf76-c5316ca76812"),
                            BrandId = new Guid("e4e0bbc3-9032-4cdd-bd18-a560a551272b"),
                            CategoryId = new Guid("79b2bbbf-45d5-4bc1-9f24-dc46aa28cc1f"),
                            Description = "Premium Muay Thai shorts with authentic design.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/fairtex-muay-thai-shorts/fairtex-muay-thai-shorts-1.png",
                            Name = "Fairtex Muay Thai Shorts",
                            Price = 84.99m,
                            StockQuantity = 90
                        },
                        new
                        {
                            ProductId = new Guid("74243aba-de23-4783-8d20-0f11151eea08"),
                            BrandId = new Guid("e75b2bfa-2387-4358-9178-6a55961c308f"),
                            CategoryId = new Guid("410af451-d9e6-4e12-b047-364aa44806fb"),
                            Description = "Perfect for accuracy and reflex training.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/title-boxing-gloves/title-boxing-gloves-1.png",
                            Name = "Title Boxing Double End Bag",
                            Price = 99.99m,
                            StockQuantity = 70
                        },
                        new
                        {
                            ProductId = new Guid("414c35e9-bc13-4aaa-909f-502ef7bd5829"),
                            BrandId = new Guid("aaa2005b-aee5-476f-8d81-0f2778b7b541"),
                            CategoryId = new Guid("0da1de74-b5b6-4c11-b48c-736cc36fed1c"),
                            Description = "Full-protection headgear with durable padding.",
                            IsDeleted = false,
                            MainImageUrl = "/images/Products/everlast-pro-headgear/everlast-headgear-1.png",
                            Name = "Everlast Pro Headgear",
                            Price = 89.99m,
                            StockQuantity = 50
                        });
                });

            modelBuilder.Entity("KickShop.Models.ProductSize", b =>
                {
                    b.Property<Guid>("ProductSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Product Model");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasComment("The Quantity Of The Sizes");

                    b.Property<int>("Size")
                        .HasColumnType("int")
                        .HasComment("The Size");

                    b.HasKey("ProductSizeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsSizes");

                    b.HasData(
                        new
                        {
                            ProductSizeId = new Guid("3406946a-397f-4db8-a433-ef2bcd74918b"),
                            ProductId = new Guid("fbc86e42-74ba-4da8-bd63-00a6126a8f41"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("8c7d84e0-d77e-4c2e-8cc0-3ee565a9961f"),
                            ProductId = new Guid("fbc86e42-74ba-4da8-bd63-00a6126a8f41"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("97328485-a623-41fb-af51-0d7e8d470d77"),
                            ProductId = new Guid("fbc86e42-74ba-4da8-bd63-00a6126a8f41"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("2c0f3337-8091-4ffd-8b43-0234e56a5c19"),
                            ProductId = new Guid("523a9aad-21f7-4aef-8d55-37a11f8a81e9"),
                            Quantity = 3,
                            Size = 1
                        },
                        new
                        {
                            ProductSizeId = new Guid("328e2aaf-dd93-481f-a8a2-2b1c24189dd7"),
                            ProductId = new Guid("523a9aad-21f7-4aef-8d55-37a11f8a81e9"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("fe7240c1-aa14-4010-bcd1-0109fad70305"),
                            ProductId = new Guid("523a9aad-21f7-4aef-8d55-37a11f8a81e9"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("a2fcf86a-3518-4b0a-9938-4e1df1c079e2"),
                            ProductId = new Guid("f02fc5a7-e275-41c4-937b-2242ff3811b4"),
                            Quantity = 3,
                            Size = 4
                        },
                        new
                        {
                            ProductSizeId = new Guid("a46a22fe-662c-4bdc-b4c8-d225e76bd57b"),
                            ProductId = new Guid("f02fc5a7-e275-41c4-937b-2242ff3811b4"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("4d66a864-6c4d-4145-ac37-628c71697155"),
                            ProductId = new Guid("f02fc5a7-e275-41c4-937b-2242ff3811b4"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("5ae53ab5-c77a-4e3f-b7f2-155e4f1b072b"),
                            ProductId = new Guid("3e690f70-0989-46f7-82ac-45a15f80afb1"),
                            Quantity = 3,
                            Size = 5
                        },
                        new
                        {
                            ProductSizeId = new Guid("6a37de0e-9a80-4cc3-b7e3-91cb9ea2f382"),
                            ProductId = new Guid("3e690f70-0989-46f7-82ac-45a15f80afb1"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("aefa8aee-71ee-429e-823b-18bca17eee6f"),
                            ProductId = new Guid("3e690f70-0989-46f7-82ac-45a15f80afb1"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("6873509f-ee23-4cb4-828b-74f6b7e9e72c"),
                            ProductId = new Guid("90127731-f304-4cf1-a238-c4dd151f96ea"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("3f113265-7cc9-4911-8e39-b12fe0e2f62c"),
                            ProductId = new Guid("90127731-f304-4cf1-a238-c4dd151f96ea"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("b72b64a3-1fbf-4ec5-886d-514242c86760"),
                            ProductId = new Guid("90127731-f304-4cf1-a238-c4dd151f96ea"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("2d5d6567-c335-4213-96a2-6052d69e9f3f"),
                            ProductId = new Guid("a19a673a-be70-4967-aa88-979a4864e3e3"),
                            Quantity = 3,
                            Size = 6
                        },
                        new
                        {
                            ProductSizeId = new Guid("e7ba3bac-d75d-416d-bbfb-b67fd34a071e"),
                            ProductId = new Guid("a19a673a-be70-4967-aa88-979a4864e3e3"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("2597bcb3-407c-45d2-9abb-239485a8cae5"),
                            ProductId = new Guid("a19a673a-be70-4967-aa88-979a4864e3e3"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("eaaa7b6d-6b40-45ad-bd22-d38652a1d3e1"),
                            ProductId = new Guid("b50a1d20-f032-41aa-903d-ea56e9ac8e1f"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("5337aa1e-fb45-44d4-befc-53a404846f01"),
                            ProductId = new Guid("b50a1d20-f032-41aa-903d-ea56e9ac8e1f"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("7f557209-ddf9-466e-8f6a-4944903bd710"),
                            ProductId = new Guid("b50a1d20-f032-41aa-903d-ea56e9ac8e1f"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("2cdcf9ef-12b1-4c28-a8cf-b2f17c9b21c9"),
                            ProductId = new Guid("fbc86e42-74ba-4da8-bd63-00a6126a8f41"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("b2c81973-b8c1-4694-bef0-7b4d4bf2c3d4"),
                            ProductId = new Guid("fbc86e42-74ba-4da8-bd63-00a6126a8f41"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("587cac19-91bd-4945-8789-850657b140e9"),
                            ProductId = new Guid("fbc86e42-74ba-4da8-bd63-00a6126a8f41"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("26d111af-9655-466e-802f-1d982a7473be"),
                            ProductId = new Guid("166dcc51-a346-4607-8102-54e7e6ba48ab"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("e69233eb-0995-432a-944b-7e526e42a8df"),
                            ProductId = new Guid("166dcc51-a346-4607-8102-54e7e6ba48ab"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("6fba5c0a-29f6-42ba-a1f8-9dd219f2f7c4"),
                            ProductId = new Guid("166dcc51-a346-4607-8102-54e7e6ba48ab"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("9686436b-8a10-4bd6-a7b4-3c0e6b14d79d"),
                            ProductId = new Guid("c9443397-a67d-49a8-9140-d321b5ce6c1b"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("9796696e-e39f-43fa-bc8b-99b575c88caf"),
                            ProductId = new Guid("c9443397-a67d-49a8-9140-d321b5ce6c1b"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("f9b067db-763d-4d93-9f79-2381d70ebfc8"),
                            ProductId = new Guid("c9443397-a67d-49a8-9140-d321b5ce6c1b"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("04fdf50b-2e4a-460c-b6a5-6f7b51b9f12b"),
                            ProductId = new Guid("5110dda2-a6ae-472c-9f45-3dda1b7ce0ce"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("2b2e5afb-328b-4a40-b3e5-88c863a90952"),
                            ProductId = new Guid("5110dda2-a6ae-472c-9f45-3dda1b7ce0ce"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("01c35dc4-8b23-4fb3-9610-1c722b6d1d9b"),
                            ProductId = new Guid("5110dda2-a6ae-472c-9f45-3dda1b7ce0ce"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("ebc61b2d-92d8-4583-84c0-ef2ec5ad66e8"),
                            ProductId = new Guid("8310c25f-88a5-4c25-8586-31a737135336"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("baceb27b-b530-4b55-a75e-eaaa53b5751a"),
                            ProductId = new Guid("8310c25f-88a5-4c25-8586-31a737135336"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("891fb7a3-e8e1-46ba-8ec0-3a581d74c59e"),
                            ProductId = new Guid("8310c25f-88a5-4c25-8586-31a737135336"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("68809631-4cd4-43c9-ac41-1e7ac130447a"),
                            ProductId = new Guid("1e8851a0-2c59-4997-bf76-c5316ca76812"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("b15dc1d6-b2d2-4f91-a43f-bd11f7276bc8"),
                            ProductId = new Guid("1e8851a0-2c59-4997-bf76-c5316ca76812"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("8e2c4720-7a85-4043-89b2-f232595f4455"),
                            ProductId = new Guid("1e8851a0-2c59-4997-bf76-c5316ca76812"),
                            Quantity = 5,
                            Size = 0
                        },
                        new
                        {
                            ProductSizeId = new Guid("a5f16a40-cd51-4c88-998c-42ab2b39f922"),
                            ProductId = new Guid("74243aba-de23-4783-8d20-0f11151eea08"),
                            Quantity = 3,
                            Size = 2
                        },
                        new
                        {
                            ProductSizeId = new Guid("2b4935de-ef98-4ba5-9e50-db7231313c61"),
                            ProductId = new Guid("74243aba-de23-4783-8d20-0f11151eea08"),
                            Quantity = 2,
                            Size = 3
                        },
                        new
                        {
                            ProductSizeId = new Guid("5f7cda02-04f0-49dd-9ac9-80233fae5b28"),
                            ProductId = new Guid("74243aba-de23-4783-8d20-0f11151eea08"),
                            Quantity = 5,
                            Size = 0
                        });
                });

            modelBuilder.Entity("KickShop.Models.ShoppingCart", b =>
                {
                    b.Property<Guid>("ShoppingCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("Foreign Key To The Customer Entity");

                    b.Property<string>("DateCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The Date When The Shopping Cart Was Created");

                    b.HasKey("ShoppingCartId");

                    b.HasIndex("CustomerId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProductImage", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The Unique Identifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("The Url To The Image");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key To The Product Entity To Which The Picture Belongs");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsImages");

                    b.HasData(
                        new
                        {
                            ImageId = new Guid("e96ded05-61fe-4f89-bafb-29fc3b6e4cde"),
                            ImageUrl = "/images/Products/rdx-boxing-gloves/rdx-boxing-glove-1.png",
                            ProductId = new Guid("fbc86e42-74ba-4da8-bd63-00a6126a8f41")
                        },
                        new
                        {
                            ImageId = new Guid("01c27d60-30d6-4bbd-b505-db5974b75dc8"),
                            ImageUrl = "/images/Products/rdx-boxing-gloves/rdx-boxing-glove-2.png",
                            ProductId = new Guid("fbc86e42-74ba-4da8-bd63-00a6126a8f41")
                        },
                        new
                        {
                            ImageId = new Guid("088ce089-5199-4c9d-8392-28f79f1d288e"),
                            ImageUrl = "/images/Products/rdx-boxing-gloves/rdx-boxing-glove-3.png",
                            ProductId = new Guid("fbc86e42-74ba-4da8-bd63-00a6126a8f41")
                        },
                        new
                        {
                            ImageId = new Guid("a609a811-fc40-47ab-9f93-eac7c8ac8922"),
                            ImageUrl = "/images/Products/hayabusa-boxing-gloves/hayabusa-boxing-gloves-1.png",
                            ProductId = new Guid("523a9aad-21f7-4aef-8d55-37a11f8a81e9")
                        },
                        new
                        {
                            ImageId = new Guid("92e7316e-cb60-4272-b479-f77066eb8fb3"),
                            ImageUrl = "/images/Products/hayabusa-boxing-gloves/hayabusa-boxing-gloves-2.png",
                            ProductId = new Guid("523a9aad-21f7-4aef-8d55-37a11f8a81e9")
                        },
                        new
                        {
                            ImageId = new Guid("5ed0944f-eed3-402b-909e-ffc93e2aacf4"),
                            ImageUrl = "/images/Products/hayabusa-boxing-gloves/hayabusa-boxing-gloves-3.png",
                            ProductId = new Guid("523a9aad-21f7-4aef-8d55-37a11f8a81e9")
                        },
                        new
                        {
                            ImageId = new Guid("e6eaf909-f650-42d2-ac1e-a5baf1aa4b97"),
                            ImageUrl = "/images/Products/venum-challenger-gloves/venum-challenger-gloves-1.png",
                            ProductId = new Guid("f02fc5a7-e275-41c4-937b-2242ff3811b4")
                        },
                        new
                        {
                            ImageId = new Guid("4980fdf9-5313-432f-9d56-31f22f5e46ac"),
                            ImageUrl = "/images/Products/venum-challenger-gloves/venum-challenger-gloves-2.png",
                            ProductId = new Guid("f02fc5a7-e275-41c4-937b-2242ff3811b4")
                        },
                        new
                        {
                            ImageId = new Guid("49736e76-f343-406c-aeb1-98e00ee3cf28"),
                            ImageUrl = "/images/Products/venum-challenger-gloves/venum-challenger-gloves-3.png",
                            ProductId = new Guid("f02fc5a7-e275-41c4-937b-2242ff3811b4")
                        },
                        new
                        {
                            ImageId = new Guid("8cd2409f-936f-4e51-b31a-97f5e6c34025"),
                            ImageUrl = "/images/Products/title-boxing-bag/title-boxing-bag-1.png",
                            ProductId = new Guid("3e690f70-0989-46f7-82ac-45a15f80afb1")
                        },
                        new
                        {
                            ImageId = new Guid("00da48df-ae44-447b-b65a-ba81682ba872"),
                            ImageUrl = "/images/Products/title-boxing-bag/title-boxing-bag-2.png",
                            ProductId = new Guid("3e690f70-0989-46f7-82ac-45a15f80afb1")
                        },
                        new
                        {
                            ImageId = new Guid("11e7e8a1-a00a-4717-8e95-92695270cf09"),
                            ImageUrl = "/images/Products/title-boxing-bag/title-boxing-bag-3.png",
                            ProductId = new Guid("3e690f70-0989-46f7-82ac-45a15f80afb1")
                        },
                        new
                        {
                            ImageId = new Guid("c9e0080b-594e-4f39-972c-3f3cb6d9341e"),
                            ImageUrl = "/images/Products/century-kickboxing-shorts/century-kickboxing-shorts-1.png",
                            ProductId = new Guid("90127731-f304-4cf1-a238-c4dd151f96ea")
                        },
                        new
                        {
                            ImageId = new Guid("04e77520-f5ac-429f-a277-2fe83732713e"),
                            ImageUrl = "/images/Products/century-kickboxing-shorts/century-kickboxing-shorts-2.png",
                            ProductId = new Guid("90127731-f304-4cf1-a238-c4dd151f96ea")
                        },
                        new
                        {
                            ImageId = new Guid("96be1222-3c24-42b0-94e3-4ffbb2321407"),
                            ImageUrl = "/images/Products/century-kickboxing-shorts/century-kickboxing-shorts-3.png",
                            ProductId = new Guid("90127731-f304-4cf1-a238-c4dd151f96ea")
                        },
                        new
                        {
                            ImageId = new Guid("0359ed64-ddff-4c77-8114-64b8bb156df0"),
                            ImageUrl = "/images/Products/sanabul-shin-guards/sanabul-shin-guards-1.png",
                            ProductId = new Guid("a19a673a-be70-4967-aa88-979a4864e3e3")
                        },
                        new
                        {
                            ImageId = new Guid("db17a92a-9f67-43fd-a993-c8af2566221d"),
                            ImageUrl = "/images/Products/sanabul-shin-guards/sanabul-shin-guards-2.png",
                            ProductId = new Guid("a19a673a-be70-4967-aa88-979a4864e3e3")
                        },
                        new
                        {
                            ImageId = new Guid("f04bbcd2-b0c8-4ed1-a6ae-05ae532312ee"),
                            ImageUrl = "/images/Products/sanabul-shin-guards/sanabul-shin-guards-3.png",
                            ProductId = new Guid("a19a673a-be70-4967-aa88-979a4864e3e3")
                        },
                        new
                        {
                            ImageId = new Guid("b1bbf380-2958-4de0-aec0-76140dfcfc08"),
                            ImageUrl = "/images/Products/twins-special-headgear/twins-special-headgear-1.png",
                            ProductId = new Guid("b50a1d20-f032-41aa-903d-ea56e9ac8e1f")
                        },
                        new
                        {
                            ImageId = new Guid("6e614e8f-8904-4e66-b476-96f0c03c644c"),
                            ImageUrl = "/images/Products/twins-special-headgear/twins-special-headgear-2.png",
                            ProductId = new Guid("b50a1d20-f032-41aa-903d-ea56e9ac8e1f")
                        },
                        new
                        {
                            ImageId = new Guid("ea0e456a-642e-4b64-89ca-d06be08655e4"),
                            ImageUrl = "/images/Products/twins-special-headgear/twins-shin-headgear-3.png",
                            ProductId = new Guid("b50a1d20-f032-41aa-903d-ea56e9ac8e1f")
                        },
                        new
                        {
                            ImageId = new Guid("ccd6a712-8d3f-4c54-90bd-554c6e1ca63d"),
                            ImageUrl = "/images/Products/everlast-hand-wraps/everlast-hand-wraps-1.png",
                            ProductId = new Guid("166dcc51-a346-4607-8102-54e7e6ba48ab")
                        },
                        new
                        {
                            ImageId = new Guid("2cd66ddc-94dd-4da3-9706-ebfdb889805e"),
                            ImageUrl = "/images/Products/everlast-hand-wraps/everlast-hand-wraps-2.png",
                            ProductId = new Guid("166dcc51-a346-4607-8102-54e7e6ba48ab")
                        },
                        new
                        {
                            ImageId = new Guid("dddc98d6-1ae4-4fca-8cb2-96ae6fac81df"),
                            ImageUrl = "/images/Products/everlast-hand-wraps/everlast-hand-wraps-3.png",
                            ProductId = new Guid("166dcc51-a346-4607-8102-54e7e6ba48ab")
                        },
                        new
                        {
                            ImageId = new Guid("be6280da-63e0-4df5-a46d-37ccf71a7833"),
                            ImageUrl = "/images/Products/ringside-punching-bag/ringside-punching-bag-1.png",
                            ProductId = new Guid("c9443397-a67d-49a8-9140-d321b5ce6c1b")
                        },
                        new
                        {
                            ImageId = new Guid("06fcc56d-6345-4d29-8926-deb08c59bfc5"),
                            ImageUrl = "/images/Products/ringside-punching-bag/ringside-punching-bag-2.png",
                            ProductId = new Guid("c9443397-a67d-49a8-9140-d321b5ce6c1b")
                        },
                        new
                        {
                            ImageId = new Guid("3124fef1-11a9-4a3f-a6a8-c553cc7ff36f"),
                            ImageUrl = "/images/Products/ringside-punching-bag/ringside-punching-bag-3.png",
                            ProductId = new Guid("c9443397-a67d-49a8-9140-d321b5ce6c1b")
                        },
                        new
                        {
                            ImageId = new Guid("e4b32ac3-38f8-430a-b13d-a8761992a1e6"),
                            ImageUrl = "/images/Products/rdx-boxing-shoes/rdx-boxing-shoes-1.png",
                            ProductId = new Guid("5110dda2-a6ae-472c-9f45-3dda1b7ce0ce")
                        },
                        new
                        {
                            ImageId = new Guid("637dfb3d-41ad-47e2-b2da-69329ea28823"),
                            ImageUrl = "/images/Products/rdx-boxing-shoes/rdx-boxing-shoes-2.png",
                            ProductId = new Guid("5110dda2-a6ae-472c-9f45-3dda1b7ce0ce")
                        },
                        new
                        {
                            ImageId = new Guid("b01e41b6-d569-49d1-ab8b-293c68a93604"),
                            ImageUrl = "/images/Products/rdx-boxing-shoes/rdx-boxing-shoes-3.png",
                            ProductId = new Guid("5110dda2-a6ae-472c-9f45-3dda1b7ce0ce")
                        },
                        new
                        {
                            ImageId = new Guid("3372f2d2-1020-407f-b60e-de9a1f6cda95"),
                            ImageUrl = "/images/Products/venum-challenger-shin-guards/venum-challenger-shin-guards-1.png",
                            ProductId = new Guid("8310c25f-88a5-4c25-8586-31a737135336")
                        },
                        new
                        {
                            ImageId = new Guid("75ae742d-201c-421f-8811-a09ddbd79075"),
                            ImageUrl = "/images/Products/venum-challenger-shin-guards/venum-challenger-shin-guards-2.png",
                            ProductId = new Guid("8310c25f-88a5-4c25-8586-31a737135336")
                        },
                        new
                        {
                            ImageId = new Guid("48bb9f50-b7bd-484f-9614-281014f65811"),
                            ImageUrl = "/images/Products/venum-challenger-shin-guards/venum-challenger-shin-guards-3.png",
                            ProductId = new Guid("8310c25f-88a5-4c25-8586-31a737135336")
                        },
                        new
                        {
                            ImageId = new Guid("e8fbed13-9b8e-4dde-b807-0ef965c42c0d"),
                            ImageUrl = "/images/Products/fairtex-muay-thai-shorts/fairtex-muay-thai-shorts-1.png",
                            ProductId = new Guid("1e8851a0-2c59-4997-bf76-c5316ca76812")
                        },
                        new
                        {
                            ImageId = new Guid("4c8accb3-ac6f-4340-8c31-dd976d068d67"),
                            ImageUrl = "/images/Products/fairtex-muay-thai-shorts/fairtex-muay-thai-shorts-2.png",
                            ProductId = new Guid("1e8851a0-2c59-4997-bf76-c5316ca76812")
                        },
                        new
                        {
                            ImageId = new Guid("ab269797-cc6b-4947-b4e4-81560142ec05"),
                            ImageUrl = "/images/Products/fairtex-muay-thai-shorts/fairtex-muay-thai-shorts-3.png",
                            ProductId = new Guid("1e8851a0-2c59-4997-bf76-c5316ca76812")
                        },
                        new
                        {
                            ImageId = new Guid("7c4b67ca-fc0f-410b-99ae-58a073f29010"),
                            ImageUrl = "/images/Products/title-boxing-gloves/title-boxing-gloves-1.png",
                            ProductId = new Guid("74243aba-de23-4783-8d20-0f11151eea08")
                        },
                        new
                        {
                            ImageId = new Guid("023ce6d6-836c-4c55-b526-656b73c652fb"),
                            ImageUrl = "/images/Products/title-boxing-gloves/title-boxing-gloves-2.png",
                            ProductId = new Guid("74243aba-de23-4783-8d20-0f11151eea08")
                        },
                        new
                        {
                            ImageId = new Guid("1fdc5ef2-f140-4860-82b6-c18f2babf804"),
                            ImageUrl = "/images/Products/title-boxing-gloves/title-boxing-gloves-3.png",
                            ProductId = new Guid("74243aba-de23-4783-8d20-0f11151eea08")
                        },
                        new
                        {
                            ImageId = new Guid("ec0a8a7c-0135-46f2-8a53-4d5025cb0936"),
                            ImageUrl = "/images/Products/everlasr-pro-headgear/everlast-headgear-1.png",
                            ProductId = new Guid("414c35e9-bc13-4aaa-909f-502ef7bd5829")
                        },
                        new
                        {
                            ImageId = new Guid("828ade31-7fae-4776-a16d-24f20355ea12"),
                            ImageUrl = "/images/Products/everlasr-pro-headgear/everlast-headgear-2.png",
                            ProductId = new Guid("414c35e9-bc13-4aaa-909f-502ef7bd5829")
                        },
                        new
                        {
                            ImageId = new Guid("cb53850c-ad85-4ffb-952b-595adc025736"),
                            ImageUrl = "/images/Products/everlasr-pro-headgear/everlast-headgear-3.png",
                            ProductId = new Guid("414c35e9-bc13-4aaa-909f-502ef7bd5829")
                        });
                });

            modelBuilder.Entity("KickShop.Models.CartItem", b =>
                {
                    b.HasOne("KickShop.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KickShop.Models.ShoppingCart", "ShoppingCart")
                        .WithMany("CartItems")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("KickShop.Models.CustomerOrder", b =>
                {
                    b.HasOne("ApplicationUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KickShop.Models.Order", "Order")
                        .WithMany("CustomerOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("KickShop.Models.Product", b =>
                {
                    b.HasOne("KickShop.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KickShop.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("KickShop.Models.ProductSize", b =>
                {
                    b.HasOne("KickShop.Models.Product", "Product")
                        .WithMany("Sizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KickShop.Models.ShoppingCart", b =>
                {
                    b.HasOne("ApplicationUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductImage", b =>
                {
                    b.HasOne("KickShop.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KickShop.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("KickShop.Models.Order", b =>
                {
                    b.Navigation("CustomerOrders");
                });

            modelBuilder.Entity("KickShop.Models.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("KickShop.Models.ShoppingCart", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
